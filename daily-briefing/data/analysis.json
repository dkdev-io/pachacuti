{
  "date": "2025-08-24T18:26:46.733Z",
  "projects": [
    {
      "path": "/Users/Danallovertheplace/pachacuti",
      "name": "pachacuti",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 7134,
      "issues": [
        "Has uncommitted changes",
        "7134 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 87110,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [
          "shell-viewer/frontend/node_modules/workbox-strategies/src/StrategyHandler.ts",
          "shell-viewer/frontend/node_modules/idb/build/entry.d.ts",
          "shell-viewer/frontend/node_modules/@types/node-forge/index.d.ts",
          "shell-viewer/frontend/node_modules/@types/d3-shape/index.d.ts",
          "shell-viewer/frontend/node_modules/@types/express-serve-static-core/index.d.ts",
          "shell-viewer/frontend/node_modules/@types/d3-array/index.d.ts",
          "shell-viewer/frontend/node_modules/@types/express/node_modules/@types/express-serve-static-core/index.d.ts",
          "shell-viewer/frontend/node_modules/@types/d3-scale/index.d.ts",
          "shell-viewer/frontend/node_modules/@types/prettier/index.d.ts",
          "shell-viewer/frontend/node_modules/@types/d3-color/index.d.ts",
          "shell-viewer/frontend/node_modules/@types/d3-time/index.d.ts",
          "shell-viewer/frontend/node_modules/@types/babel__traverse/index.d.ts",
          "shell-viewer/frontend/node_modules/@types/yargs/index.d.ts",
          "shell-viewer/frontend/node_modules/@types/eslint/rules/best-practices.d.ts",
          "shell-viewer/frontend/node_modules/@types/eslint/rules/stylistic-issues.d.ts",
          "shell-viewer/frontend/node_modules/@types/eslint/rules/ecmascript-6.d.ts",
          "shell-viewer/frontend/node_modules/@types/eslint/rules/possible-errors.d.ts",
          "shell-viewer/frontend/node_modules/@types/eslint/index.d.ts",
          "shell-viewer/frontend/node_modules/@types/estree/index.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/diagnostics_channel.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/tls.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/readline.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/crypto.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/events.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/buffer.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/worker_threads.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/async_hooks.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/stream/web.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/dns.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/vm.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/test.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/http.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/http2.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/stream.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/inspector.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/v8.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/perf_hooks.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/url.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/cluster.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/https.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/assert.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/fs.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/dgram.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/child_process.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/zlib.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/module.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/sqlite.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/process.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/util.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/dns/promises.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/fs/promises.d.ts",
          "shell-viewer/frontend/node_modules/@types/node/net.d.ts",
          "shell-viewer/frontend/node_modules/@types/babel__core/index.d.ts",
          "shell-viewer/frontend/node_modules/@types/react/ts5.0/index.d.ts",
          "shell-viewer/frontend/node_modules/@types/react/index.d.ts",
          "shell-viewer/frontend/node_modules/@types/q/index.d.ts",
          "shell-viewer/frontend/node_modules/@types/json-schema/index.d.ts",
          "shell-viewer/frontend/node_modules/csstype/index.d.ts",
          "shell-viewer/frontend/node_modules/tempy/node_modules/type-fest/source/package-json.d.ts",
          "shell-viewer/frontend/node_modules/tempy/node_modules/type-fest/source/tsconfig-json.d.ts",
          "shell-viewer/frontend/node_modules/type-fest/source/package-json.d.ts",
          "shell-viewer/frontend/node_modules/type-fest/source/tsconfig-json.d.ts",
          "shell-viewer/frontend/node_modules/commander/typings/index.d.ts",
          "shell-viewer/frontend/node_modules/xterm/typings/xterm.d.ts",
          "shell-viewer/frontend/node_modules/xterm/src/browser/renderer/shared/TextureAtlas.ts",
          "shell-viewer/frontend/node_modules/xterm/src/browser/renderer/shared/CustomGlyphs.ts",
          "shell-viewer/frontend/node_modules/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts",
          "shell-viewer/frontend/node_modules/xterm/src/browser/renderer/dom/DomRenderer.ts",
          "shell-viewer/frontend/node_modules/xterm/src/browser/Terminal.ts",
          "shell-viewer/frontend/node_modules/xterm/src/browser/services/SelectionService.ts",
          "shell-viewer/frontend/node_modules/xterm/src/common/InputHandler.ts",
          "shell-viewer/frontend/node_modules/xterm/src/common/Types.d.ts",
          "shell-viewer/frontend/node_modules/xterm/src/common/parser/EscapeSequenceParser.ts",
          "shell-viewer/frontend/node_modules/xterm/src/common/buffer/Buffer.ts",
          "shell-viewer/frontend/node_modules/xterm/src/common/buffer/BufferLine.ts",
          "shell-viewer/frontend/node_modules/decimal.js-light/decimal.d.ts",
          "shell-viewer/frontend/node_modules/acorn/dist/acorn.d.ts",
          "shell-viewer/frontend/node_modules/axe-core/axe.d.ts",
          "shell-viewer/frontend/node_modules/typescript/lib/lib.es2015.core.d.ts",
          "shell-viewer/frontend/node_modules/typescript/lib/lib.es5.d.ts",
          "shell-viewer/frontend/node_modules/typescript/lib/typescriptServices.d.ts",
          "shell-viewer/frontend/node_modules/typescript/lib/lib.dom.d.ts",
          "shell-viewer/frontend/node_modules/typescript/lib/lib.es2020.bigint.d.ts",
          "shell-viewer/frontend/node_modules/typescript/lib/protocol.d.ts",
          "shell-viewer/frontend/node_modules/typescript/lib/lib.webworker.d.ts",
          "shell-viewer/frontend/node_modules/typescript/lib/tsserverlibrary.d.ts",
          "shell-viewer/frontend/node_modules/typescript/lib/typescript.d.ts",
          "shell-viewer/frontend/node_modules/socket.io-client/build/esm-debug/socket.d.ts",
          "shell-viewer/frontend/node_modules/socket.io-client/build/esm/socket.d.ts",
          "shell-viewer/frontend/node_modules/socket.io-client/build/cjs/socket.d.ts",
          "shell-viewer/frontend/node_modules/date-fns/typings.d.ts",
          "shell-viewer/frontend/node_modules/postcss/lib/node.d.ts",
          "shell-viewer/frontend/node_modules/@rollup/pluginutils/node_modules/@types/estree/index.d.ts",
          "shell-viewer/frontend/node_modules/@typescript-eslint/types/dist/generated/ast-spec.d.ts",
          "shell-viewer/frontend/node_modules/@typescript-eslint/types/_ts3.4/dist/generated/ast-spec.d.ts",
          "shell-viewer/frontend/node_modules/@typescript-eslint/utils/dist/ast-utils/helpers.d.ts",
          "shell-viewer/frontend/node_modules/@typescript-eslint/utils/_ts3.4/dist/ast-utils/helpers.d.ts",
          "shell-viewer/frontend/node_modules/@remix-run/router/history.ts",
          "shell-viewer/frontend/node_modules/@remix-run/router/router.ts",
          "shell-viewer/frontend/node_modules/@remix-run/router/dist/utils.d.ts",
          "shell-viewer/frontend/node_modules/@remix-run/router/dist/router.d.ts",
          "shell-viewer/frontend/node_modules/@remix-run/router/utils.ts",
          "shell-viewer/frontend/node_modules/big-integer/BigInteger.d.ts",
          "shell-viewer/frontend/node_modules/xterm-addon-search/src/SearchAddon.ts",
          "shell-viewer/frontend/node_modules/enhanced-resolve/types.d.ts",
          "shell-viewer/frontend/node_modules/postcss-modules-local-by-default/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts",
          "shell-viewer/frontend/node_modules/saxes/saxes.d.ts",
          "shell-viewer/frontend/node_modules/postcss-svgo/node_modules/commander/typings/index.d.ts",
          "total",
          "shell-viewer/frontend/node_modules/@mui/icons-material/index.d.ts",
          "total",
          "shell-viewer/frontend/node_modules/@mui/material/styles/components.d.ts",
          "shell-viewer/frontend/node_modules/webpack/types.d.ts",
          "shell-viewer/frontend/node_modules/resolve-url-loader/node_modules/postcss/lib/postcss.d.ts",
          "shell-viewer/frontend/node_modules/workbox-build/build/types.d.ts",
          "shell-viewer/frontend/node_modules/workbox-build/src/types.ts",
          "shell-viewer/frontend/node_modules/webpack-dev-server/types/bin/cli-flags.d.ts",
          "shell-viewer/frontend/node_modules/webpack-dev-server/types/lib/Server.d.ts",
          "shell-viewer/frontend/node_modules/postcss-modules-scope/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts",
          "shell-viewer/frontend/node_modules/@babel/types/lib/index-legacy.d.ts",
          "shell-viewer/frontend/node_modules/@babel/types/lib/index.d.ts",
          "shell-viewer/frontend/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts",
          "shell-viewer/frontend/node_modules/rollup/dist/rollup.d.ts",
          "shell-viewer/frontend/node_modules/ansi-escapes/node_modules/type-fest/source/package-json.d.ts",
          "shell-viewer/frontend/node_modules/ansi-escapes/node_modules/type-fest/source/tsconfig-json.d.ts",
          "shell-viewer/frontend/node_modules/minipass/dist/esm/index.d.ts",
          "shell-viewer/frontend/node_modules/minipass/dist/commonjs/index.d.ts",
          "shell-viewer/frontend/node_modules/execa/index.d.ts",
          "shell-viewer/frontend/node_modules/@jridgewell/trace-mapping/src/trace-mapping.ts",
          "shell-viewer/frontend/node_modules/@jridgewell/gen-mapping/src/gen-mapping.ts",
          "shell-viewer/frontend/node_modules/workbox-window/src/Workbox.ts",
          "shell-viewer/frontend/node_modules/recharts/types/util/types.d.ts",
          "shell-viewer/frontend/node_modules/axios/index.d.ts",
          "shell-viewer/frontend/node_modules/monaco-editor/monaco.d.ts",
          "shell-viewer/frontend/node_modules/monaco-editor/esm/vs/editor/editor.api.d.ts",
          "shell-viewer/frontend/node_modules/ajv/lib/core.ts",
          "shell-viewer/frontend/node_modules/ajv/lib/compile/validate/index.ts",
          "shell-viewer/frontend/node_modules/ajv/lib/compile/codegen/index.ts",
          "shell-viewer/frontend/node_modules/@eslint-community/regexpp/index.d.ts",
          "shell-viewer/frontend/node_modules/jest-watch-typeahead/node_modules/@types/yargs/index.d.ts",
          "shell-viewer/frontend/node_modules/jest-watch-typeahead/node_modules/@jest/types/build/index.d.ts",
          "shell-viewer/frontend/node_modules/jest-watch-typeahead/node_modules/emittery/index.d.ts",
          "shell-viewer/frontend/node_modules/path-scurry/dist/esm/index.d.ts",
          "shell-viewer/frontend/node_modules/path-scurry/dist/commonjs/index.d.ts",
          "shell-viewer/frontend/node_modules/path-scurry/node_modules/lru-cache/dist/esm/index.d.ts",
          "shell-viewer/frontend/node_modules/path-scurry/node_modules/lru-cache/dist/commonjs/index.d.ts",
          "shell-viewer/backend/node_modules/@types/babel__traverse/index.d.ts",
          "shell-viewer/backend/node_modules/@types/yargs/index.d.ts",
          "shell-viewer/backend/node_modules/@types/node/diagnostics_channel.d.ts",
          "shell-viewer/backend/node_modules/@types/node/tls.d.ts",
          "shell-viewer/backend/node_modules/@types/node/readline.d.ts",
          "shell-viewer/backend/node_modules/@types/node/crypto.d.ts",
          "shell-viewer/backend/node_modules/@types/node/events.d.ts",
          "shell-viewer/backend/node_modules/@types/node/buffer.d.ts",
          "shell-viewer/backend/node_modules/@types/node/worker_threads.d.ts",
          "shell-viewer/backend/node_modules/@types/node/async_hooks.d.ts",
          "shell-viewer/backend/node_modules/@types/node/stream/web.d.ts",
          "shell-viewer/backend/node_modules/@types/node/dns.d.ts",
          "shell-viewer/backend/node_modules/@types/node/vm.d.ts",
          "shell-viewer/backend/node_modules/@types/node/test.d.ts",
          "shell-viewer/backend/node_modules/@types/node/http.d.ts",
          "shell-viewer/backend/node_modules/@types/node/http2.d.ts",
          "shell-viewer/backend/node_modules/@types/node/stream.d.ts",
          "shell-viewer/backend/node_modules/@types/node/inspector.d.ts",
          "shell-viewer/backend/node_modules/@types/node/v8.d.ts",
          "shell-viewer/backend/node_modules/@types/node/perf_hooks.d.ts",
          "shell-viewer/backend/node_modules/@types/node/url.d.ts",
          "shell-viewer/backend/node_modules/@types/node/cluster.d.ts",
          "shell-viewer/backend/node_modules/@types/node/https.d.ts",
          "shell-viewer/backend/node_modules/@types/node/assert.d.ts",
          "shell-viewer/backend/node_modules/@types/node/fs.d.ts",
          "shell-viewer/backend/node_modules/@types/node/dgram.d.ts",
          "shell-viewer/backend/node_modules/@types/node/child_process.d.ts",
          "shell-viewer/backend/node_modules/@types/node/zlib.d.ts",
          "shell-viewer/backend/node_modules/@types/node/module.d.ts",
          "shell-viewer/backend/node_modules/@types/node/sqlite.d.ts",
          "shell-viewer/backend/node_modules/@types/node/process.d.ts",
          "shell-viewer/backend/node_modules/@types/node/util.d.ts",
          "shell-viewer/backend/node_modules/@types/node/dns/promises.d.ts",
          "shell-viewer/backend/node_modules/@types/node/fs/promises.d.ts",
          "shell-viewer/backend/node_modules/@types/node/net.d.ts",
          "shell-viewer/backend/node_modules/@types/babel__core/index.d.ts",
          "shell-viewer/backend/node_modules/web-streams-polyfill/types/ponyfill.d.ts",
          "shell-viewer/backend/node_modules/@jest/types/build/index.d.ts",
          "shell-viewer/backend/node_modules/type-fest/source/package-json.d.ts",
          "shell-viewer/backend/node_modules/type-fest/source/tsconfig-json.d.ts",
          "shell-viewer/backend/node_modules/ip-address/src/ipv6.ts",
          "shell-viewer/backend/node_modules/moment/moment.d.ts",
          "shell-viewer/backend/node_modules/moment/ts3.1-typings/moment.d.ts",
          "shell-viewer/backend/node_modules/emittery/index.d.ts",
          "shell-viewer/backend/node_modules/smart-buffer/typings/smartbuffer.d.ts",
          "shell-viewer/backend/node_modules/fecha/src/fecha.ts",
          "shell-viewer/backend/node_modules/socket.io/dist/socket.d.ts",
          "shell-viewer/backend/node_modules/socket.io/dist/index.d.ts",
          "shell-viewer/backend/node_modules/@sinclair/typebox/typebox.d.ts",
          "shell-viewer/backend/node_modules/@babel/types/lib/index-legacy.d.ts",
          "shell-viewer/backend/node_modules/@babel/types/lib/index.d.ts",
          "shell-viewer/backend/node_modules/@supabase/auth-js/dist/module/GoTrueClient.d.ts",
          "shell-viewer/backend/node_modules/@supabase/auth-js/dist/module/lib/types.d.ts",
          "shell-viewer/backend/node_modules/@supabase/auth-js/dist/main/GoTrueClient.d.ts",
          "shell-viewer/backend/node_modules/@supabase/auth-js/dist/main/lib/types.d.ts",
          "shell-viewer/backend/node_modules/@supabase/auth-js/src/lib/types.ts",
          "shell-viewer/backend/node_modules/@supabase/auth-js/src/GoTrueClient.ts",
          "shell-viewer/backend/node_modules/@supabase/realtime-js/src/RealtimeClient.ts",
          "shell-viewer/backend/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts",
          "shell-viewer/backend/node_modules/@supabase/storage-js/src/packages/StorageFileApi.ts",
          "shell-viewer/backend/node_modules/@supabase/postgrest-js/src/PostgrestFilterBuilder.ts",
          "shell-viewer/backend/node_modules/@supabase/postgrest-js/src/select-query-parser/utils.ts",
          "shell-viewer/backend/node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts",
          "shell-viewer/backend/node_modules/execa/index.d.ts",
          "shell-viewer/backend/node_modules/@jridgewell/trace-mapping/src/trace-mapping.ts",
          "shell-viewer/backend/node_modules/@jridgewell/gen-mapping/src/gen-mapping.ts",
          "shell-viewer/backend/node_modules/openai/resources/beta/realtime/realtime.d.ts",
          "shell-viewer/backend/node_modules/openai/resources/beta/realtime/sessions.d.ts",
          "shell-viewer/backend/node_modules/openai/resources/beta/threads/messages.d.ts",
          "shell-viewer/backend/node_modules/openai/resources/beta/threads/threads.d.ts",
          "shell-viewer/backend/node_modules/openai/resources/beta/threads/runs/steps.d.ts",
          "shell-viewer/backend/node_modules/openai/resources/beta/threads/runs/runs.d.ts",
          "shell-viewer/backend/node_modules/openai/resources/beta/assistants.d.ts",
          "shell-viewer/backend/node_modules/openai/resources/evals/evals.d.ts",
          "shell-viewer/backend/node_modules/openai/resources/evals/runs/runs.d.ts",
          "shell-viewer/backend/node_modules/openai/resources/chat/completions/completions.d.ts",
          "total",
          "shell-viewer/backend/node_modules/openai/resources/responses/responses.d.ts",
          "shell-viewer/backend/node_modules/openai/resources/fine-tuning/jobs/jobs.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/diagnostics_channel.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/tls.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/readline.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/crypto.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/events.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/buffer.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/worker_threads.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/async_hooks.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/stream/web.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/dns.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/vm.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/test.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/http.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/http2.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/stream.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/inspector.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/v8.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/perf_hooks.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/url.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/cluster.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/https.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/assert.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/fs.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/dgram.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/child_process.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/zlib.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/module.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/process.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/util.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/fs/promises.d.ts",
          "shell-viewer/backend/node_modules/openai/node_modules/@types/node/net.d.ts",
          "shell-viewer/backend/node_modules/openai/src/resources/beta/realtime/realtime.ts",
          "shell-viewer/backend/node_modules/openai/src/resources/beta/realtime/sessions.ts",
          "shell-viewer/backend/node_modules/openai/src/resources/beta/threads/messages.ts",
          "shell-viewer/backend/node_modules/openai/src/resources/beta/threads/threads.ts",
          "shell-viewer/backend/node_modules/openai/src/resources/beta/threads/runs/runs.ts",
          "shell-viewer/backend/node_modules/openai/src/resources/beta/threads/runs/steps.ts",
          "shell-viewer/backend/node_modules/openai/src/resources/beta/assistants.ts",
          "shell-viewer/backend/node_modules/openai/src/resources/evals/evals.ts",
          "shell-viewer/backend/node_modules/openai/src/resources/evals/runs/runs.ts",
          "shell-viewer/backend/node_modules/openai/src/resources/chat/completions/completions.ts",
          "shell-viewer/backend/node_modules/openai/src/resources/responses/responses.ts",
          "shell-viewer/backend/node_modules/openai/src/resources/fine-tuning/jobs/jobs.ts",
          "shell-viewer/backend/node_modules/openai/src/resources/vector-stores/vector-stores.ts",
          "shell-viewer/backend/node_modules/openai/src/core.ts",
          "shell-viewer/backend/node_modules/openai/src/lib/AbstractChatCompletionRunner.ts",
          "shell-viewer/backend/node_modules/openai/src/lib/AssistantStream.ts",
          "shell-viewer/backend/node_modules/openai/src/lib/ChatCompletionStream.ts",
          "shell-viewer/backend/node_modules/openai/src/index.ts",
          "node_modules/zod/v4/core/schemas.d.ts",
          "node_modules/zod/v4/classic/schemas.d.ts",
          "node_modules/zod/v3/types.d.ts",
          "node_modules/zod/src/v4/core/schemas.ts",
          "node_modules/zod/src/v4/core/api.ts",
          "node_modules/zod/src/v4/core/to-json-schema.ts",
          "node_modules/zod/src/v4/core/checks.ts",
          "node_modules/zod/src/v4/core/util.ts",
          "node_modules/zod/src/v4/mini/tests/index.test.ts",
          "node_modules/zod/src/v4/mini/schemas.ts",
          "node_modules/zod/src/v4/classic/tests/template-literal.test.ts",
          "node_modules/zod/src/v4/classic/tests/index.test.ts",
          "node_modules/zod/src/v4/classic/tests/error-utils.test.ts",
          "node_modules/zod/src/v4/classic/tests/string.test.ts",
          "node_modules/zod/src/v4/classic/tests/discriminated-unions.test.ts",
          "node_modules/zod/src/v4/classic/tests/to-json-schema.test.ts",
          "node_modules/zod/src/v4/classic/tests/refine.test.ts",
          "node_modules/zod/src/v4/classic/tests/error.test.ts",
          "node_modules/zod/src/v4/classic/tests/object.test.ts",
          "node_modules/zod/src/v4/classic/schemas.ts",
          "node_modules/zod/src/v3/tests/string.test.ts",
          "node_modules/zod/src/v3/tests/error.test.ts",
          "node_modules/zod/src/v3/types.ts",
          "node_modules/@types/node/diagnostics_channel.d.ts",
          "node_modules/@types/node/tls.d.ts",
          "node_modules/@types/node/readline.d.ts",
          "node_modules/@types/node/crypto.d.ts",
          "node_modules/@types/node/events.d.ts",
          "node_modules/@types/node/buffer.d.ts",
          "node_modules/@types/node/worker_threads.d.ts",
          "node_modules/@types/node/async_hooks.d.ts",
          "node_modules/@types/node/stream/web.d.ts",
          "node_modules/@types/node/dns.d.ts",
          "node_modules/@types/node/vm.d.ts",
          "node_modules/@types/node/test.d.ts",
          "node_modules/@types/node/http.d.ts",
          "node_modules/@types/node/http2.d.ts",
          "node_modules/@types/node/stream.d.ts",
          "node_modules/@types/node/inspector.d.ts",
          "node_modules/@types/node/v8.d.ts",
          "node_modules/@types/node/perf_hooks.d.ts",
          "node_modules/@types/node/url.d.ts",
          "node_modules/@types/node/cluster.d.ts",
          "node_modules/@types/node/https.d.ts",
          "node_modules/@types/node/assert.d.ts",
          "node_modules/@types/node/fs.d.ts",
          "node_modules/@types/node/dgram.d.ts",
          "node_modules/@types/node/child_process.d.ts",
          "node_modules/@types/node/zlib.d.ts",
          "node_modules/@types/node/module.d.ts",
          "node_modules/@types/node/sqlite.d.ts",
          "node_modules/@types/node/process.d.ts",
          "node_modules/@types/node/util.d.ts",
          "node_modules/@types/node/dns/promises.d.ts",
          "node_modules/@types/node/fs/promises.d.ts",
          "node_modules/@types/node/net.d.ts",
          "node_modules/lru-cache/index.d.ts",
          "node_modules/ip-address/src/ipv6.ts",
          "node_modules/puppeteer/lib/types.d.ts",
          "node_modules/ast-types/gen/builders.d.ts",
          "node_modules/ast-types/gen/namedTypes.d.ts",
          "node_modules/smart-buffer/typings/smartbuffer.d.ts",
          "node_modules/devtools-protocol/types/protocol-mapping.d.ts",
          "node_modules/devtools-protocol/types/protocol-tests-proxy-api.d.ts",
          "node_modules/devtools-protocol/types/protocol.d.ts",
          "node_modules/devtools-protocol/types/protocol-proxy-api.d.ts",
          "node_modules/bare-fs/index.d.ts",
          "node_modules/chromium-bidi/lib/esm/protocol/generated/webdriver-bidi.d.ts",
          "node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts",
          "node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi-bluetooth.d.ts",
          "node_modules/chromium-bidi/lib/cjs/protocol/generated/webdriver-bidi.d.ts",
          "node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts",
          "node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi-bluetooth.d.ts",
          "node_modules/puppeteer-core/lib/esm/puppeteer/api/ElementHandle.d.ts",
          "node_modules/puppeteer-core/lib/esm/puppeteer/api/Frame.d.ts",
          "node_modules/puppeteer-core/lib/esm/puppeteer/api/Page.d.ts",
          "node_modules/puppeteer-core/lib/types.d.ts",
          "node_modules/puppeteer-core/lib/es5-iife/puppeteer-core-browser.d.ts",
          "node_modules/puppeteer-core/lib/cjs/puppeteer/api/ElementHandle.d.ts",
          "node_modules/puppeteer-core/lib/cjs/puppeteer/api/Frame.d.ts",
          "node_modules/puppeteer-core/lib/cjs/puppeteer/api/Page.d.ts",
          "node_modules/puppeteer-core/src/cdp/EmulationManager.ts",
          "node_modules/puppeteer-core/src/cdp/ExecutionContext.ts",
          "node_modules/puppeteer-core/src/cdp/FrameManager.ts",
          "node_modules/puppeteer-core/src/cdp/Accessibility.ts",
          "node_modules/puppeteer-core/src/cdp/NetworkManager.ts",
          "node_modules/puppeteer-core/src/cdp/Input.ts",
          "node_modules/puppeteer-core/src/cdp/Page.ts",
          "node_modules/puppeteer-core/src/cdp/Coverage.ts",
          "node_modules/puppeteer-core/src/bidi/core/BrowsingContext.ts",
          "node_modules/puppeteer-core/src/bidi/Frame.ts",
          "node_modules/puppeteer-core/src/bidi/Input.ts",
          "node_modules/puppeteer-core/src/bidi/Page.ts",
          "node_modules/puppeteer-core/src/common/USKeyboardLayout.ts",
          "node_modules/puppeteer-core/src/common/Device.ts",
          "node_modules/puppeteer-core/src/api/HTTPRequest.ts",
          "node_modules/puppeteer-core/src/api/Frame.ts",
          "node_modules/puppeteer-core/src/api/Input.ts",
          "node_modules/puppeteer-core/src/api/locators/locators.ts",
          "node_modules/puppeteer-core/src/api/Browser.ts",
          "node_modules/puppeteer-core/src/api/Page.ts",
          "node_modules/puppeteer-core/src/api/ElementHandle.ts",
          "node_modules/puppeteer-core/src/node/BrowserLauncher.ts",
          "node_modules/@puppeteer/browsers/src/install.ts",
          "node_modules/@puppeteer/browsers/src/CLI.ts",
          "node_modules/@puppeteer/browsers/src/launch.ts",
          "session-recorder/node_modules/zod/v4/core/schemas.d.ts",
          "session-recorder/node_modules/zod/v4/classic/schemas.d.ts",
          "session-recorder/node_modules/zod/v3/types.d.ts",
          "session-recorder/node_modules/zod/src/v4/core/schemas.ts",
          "session-recorder/node_modules/zod/src/v4/core/api.ts",
          "session-recorder/node_modules/zod/src/v4/core/to-json-schema.ts",
          "session-recorder/node_modules/zod/src/v4/core/checks.ts",
          "session-recorder/node_modules/zod/src/v4/core/util.ts",
          "session-recorder/node_modules/zod/src/v4/mini/tests/index.test.ts",
          "session-recorder/node_modules/zod/src/v4/mini/schemas.ts",
          "session-recorder/node_modules/zod/src/v4/classic/tests/template-literal.test.ts",
          "session-recorder/node_modules/zod/src/v4/classic/tests/index.test.ts",
          "session-recorder/node_modules/zod/src/v4/classic/tests/error-utils.test.ts",
          "session-recorder/node_modules/zod/src/v4/classic/tests/string.test.ts",
          "session-recorder/node_modules/zod/src/v4/classic/tests/discriminated-unions.test.ts",
          "session-recorder/node_modules/zod/src/v4/classic/tests/to-json-schema.test.ts",
          "session-recorder/node_modules/zod/src/v4/classic/tests/refine.test.ts",
          "session-recorder/node_modules/zod/src/v4/classic/tests/error.test.ts",
          "session-recorder/node_modules/zod/src/v4/classic/tests/object.test.ts",
          "session-recorder/node_modules/zod/src/v4/classic/schemas.ts",
          "session-recorder/node_modules/zod/src/v3/tests/string.test.ts",
          "session-recorder/node_modules/zod/src/v3/tests/error.test.ts",
          "session-recorder/node_modules/zod/src/v3/types.ts",
          "session-recorder/node_modules/@types/node/diagnostics_channel.d.ts",
          "session-recorder/node_modules/@types/node/tls.d.ts",
          "session-recorder/node_modules/@types/node/readline.d.ts",
          "session-recorder/node_modules/@types/node/crypto.d.ts",
          "session-recorder/node_modules/@types/node/events.d.ts",
          "session-recorder/node_modules/@types/node/buffer.d.ts",
          "session-recorder/node_modules/@types/node/worker_threads.d.ts",
          "session-recorder/node_modules/@types/node/async_hooks.d.ts",
          "session-recorder/node_modules/@types/node/stream/web.d.ts",
          "session-recorder/node_modules/@types/node/dns.d.ts",
          "session-recorder/node_modules/@types/node/vm.d.ts",
          "session-recorder/node_modules/@types/node/test.d.ts",
          "session-recorder/node_modules/@types/node/http.d.ts",
          "session-recorder/node_modules/@types/node/http2.d.ts",
          "session-recorder/node_modules/@types/node/stream.d.ts",
          "session-recorder/node_modules/@types/node/inspector.d.ts",
          "session-recorder/node_modules/@types/node/v8.d.ts",
          "session-recorder/node_modules/@types/node/perf_hooks.d.ts",
          "session-recorder/node_modules/@types/node/url.d.ts",
          "session-recorder/node_modules/@types/node/cluster.d.ts",
          "session-recorder/node_modules/@types/node/https.d.ts",
          "session-recorder/node_modules/@types/node/assert.d.ts",
          "session-recorder/node_modules/@types/node/fs.d.ts",
          "session-recorder/node_modules/@types/node/dgram.d.ts",
          "session-recorder/node_modules/@types/node/child_process.d.ts",
          "session-recorder/node_modules/@types/node/zlib.d.ts",
          "session-recorder/node_modules/@types/node/module.d.ts",
          "session-recorder/node_modules/@types/node/sqlite.d.ts",
          "session-recorder/node_modules/@types/node/process.d.ts",
          "session-recorder/node_modules/@types/node/util.d.ts",
          "session-recorder/node_modules/@types/node/dns/promises.d.ts",
          "session-recorder/node_modules/@types/node/fs/promises.d.ts",
          "session-recorder/node_modules/@types/node/net.d.ts",
          "session-recorder/node_modules/proxy-agent/node_modules/lru-cache/index.d.ts",
          "session-recorder/node_modules/type-fest/source/package-json.d.ts",
          "session-recorder/node_modules/type-fest/source/tsconfig-json.d.ts",
          "session-recorder/node_modules/ip-address/src/ipv6.ts",
          "session-recorder/node_modules/moment/moment.d.ts",
          "session-recorder/node_modules/moment/ts3.1-typings/moment.d.ts",
          "session-recorder/node_modules/puppeteer/lib/types.d.ts",
          "session-recorder/node_modules/ast-types/gen/builders.d.ts",
          "session-recorder/node_modules/ast-types/gen/namedTypes.d.ts",
          "session-recorder/node_modules/smart-buffer/typings/smartbuffer.d.ts",
          "session-recorder/node_modules/devtools-protocol/types/protocol-mapping.d.ts",
          "session-recorder/node_modules/devtools-protocol/types/protocol-tests-proxy-api.d.ts",
          "session-recorder/node_modules/devtools-protocol/types/protocol.d.ts",
          "session-recorder/node_modules/devtools-protocol/types/protocol-proxy-api.d.ts",
          "session-recorder/node_modules/bare-fs/index.d.ts",
          "session-recorder/node_modules/fecha/src/fecha.ts",
          "session-recorder/node_modules/chromium-bidi/lib/esm/protocol/generated/webdriver-bidi.d.ts",
          "session-recorder/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts",
          "session-recorder/node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi-bluetooth.d.ts",
          "session-recorder/node_modules/chromium-bidi/lib/cjs/protocol/generated/webdriver-bidi.d.ts",
          "session-recorder/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts",
          "session-recorder/node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi-bluetooth.d.ts",
          "session-recorder/node_modules/@supabase/auth-js/dist/module/GoTrueClient.d.ts",
          "session-recorder/node_modules/@supabase/auth-js/dist/module/lib/types.d.ts",
          "session-recorder/node_modules/@supabase/auth-js/dist/main/GoTrueClient.d.ts",
          "session-recorder/node_modules/@supabase/auth-js/dist/main/lib/types.d.ts",
          "session-recorder/node_modules/@supabase/auth-js/src/lib/types.ts",
          "session-recorder/node_modules/@supabase/auth-js/src/GoTrueClient.ts",
          "session-recorder/node_modules/@supabase/realtime-js/src/RealtimeClient.ts",
          "session-recorder/node_modules/@supabase/realtime-js/src/RealtimeChannel.ts",
          "session-recorder/node_modules/@supabase/storage-js/src/packages/StorageFileApi.ts",
          "session-recorder/node_modules/@supabase/postgrest-js/src/PostgrestFilterBuilder.ts",
          "session-recorder/node_modules/@supabase/postgrest-js/src/select-query-parser/utils.ts",
          "session-recorder/node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts",
          "session-recorder/node_modules/rxjs/src/internal/testing/TestScheduler.ts",
          "session-recorder/node_modules/rxjs/src/internal/ajax/ajax.ts",
          "session-recorder/node_modules/puppeteer-core/lib/esm/puppeteer/api/ElementHandle.d.ts",
          "session-recorder/node_modules/puppeteer-core/lib/esm/puppeteer/api/Frame.d.ts",
          "session-recorder/node_modules/puppeteer-core/lib/esm/puppeteer/api/Page.d.ts",
          "session-recorder/node_modules/puppeteer-core/lib/types.d.ts",
          "session-recorder/node_modules/puppeteer-core/lib/es5-iife/puppeteer-core-browser.d.ts",
          "session-recorder/node_modules/puppeteer-core/lib/cjs/puppeteer/api/ElementHandle.d.ts",
          "session-recorder/node_modules/puppeteer-core/lib/cjs/puppeteer/api/Frame.d.ts",
          "session-recorder/node_modules/puppeteer-core/lib/cjs/puppeteer/api/Page.d.ts",
          "session-recorder/node_modules/puppeteer-core/src/cdp/EmulationManager.ts",
          "session-recorder/node_modules/puppeteer-core/src/cdp/ExecutionContext.ts",
          "session-recorder/node_modules/puppeteer-core/src/cdp/FrameManager.ts",
          "session-recorder/node_modules/puppeteer-core/src/cdp/Accessibility.ts",
          "session-recorder/node_modules/puppeteer-core/src/cdp/NetworkManager.ts",
          "session-recorder/node_modules/puppeteer-core/src/cdp/Input.ts",
          "session-recorder/node_modules/puppeteer-core/src/cdp/Page.ts",
          "session-recorder/node_modules/puppeteer-core/src/cdp/Coverage.ts",
          "session-recorder/node_modules/puppeteer-core/src/bidi/core/BrowsingContext.ts",
          "session-recorder/node_modules/puppeteer-core/src/bidi/Frame.ts",
          "session-recorder/node_modules/puppeteer-core/src/bidi/Input.ts",
          "session-recorder/node_modules/puppeteer-core/src/bidi/Page.ts",
          "session-recorder/node_modules/puppeteer-core/src/common/USKeyboardLayout.ts",
          "session-recorder/node_modules/puppeteer-core/src/common/Device.ts",
          "session-recorder/node_modules/puppeteer-core/src/api/HTTPRequest.ts",
          "session-recorder/node_modules/puppeteer-core/src/api/Frame.ts",
          "session-recorder/node_modules/puppeteer-core/src/api/Input.ts",
          "session-recorder/node_modules/puppeteer-core/src/api/locators/locators.ts",
          "session-recorder/node_modules/puppeteer-core/src/api/Browser.ts",
          "session-recorder/node_modules/puppeteer-core/src/api/Page.ts",
          "session-recorder/node_modules/puppeteer-core/src/api/ElementHandle.ts",
          "session-recorder/node_modules/puppeteer-core/src/node/BrowserLauncher.ts",
          "session-recorder/node_modules/@puppeteer/browsers/src/install.ts",
          "session-recorder/node_modules/@puppeteer/browsers/src/CLI.ts",
          "session-recorder/node_modules/@puppeteer/browsers/src/launch.ts",
          "session-recorder/node_modules/simple-git/dist/typings/response.d.ts",
          "session-recorder/node_modules/simple-git/dist/typings/simple-git.d.ts",
          "total"
        ],
        "duplicateCode": false,
        "missingTests": []
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "refactor-complex",
          "description": "Refactor 508 complex files",
          "impact": "medium",
          "timeEstimate": "1 hour",
          "howTo": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 7134 TODOs",
          "impact": "medium",
          "timeEstimate": "71340 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        },
        {
          "feature": "swarm coordination",
          "benefit": "Use multiple agents in parallel for 2.8x speedup",
          "command": "Launch multiple Task() agents concurrently"
        }
      ],
      "timeToComplete": 71348
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/session-recorder",
      "name": "pachacuti-session-recorder",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 868,
      "issues": [
        "Has uncommitted changes",
        "868 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 5793,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [
          "node_modules/zod/v4/core/schemas.d.ts",
          "node_modules/zod/v4/classic/schemas.d.ts",
          "node_modules/zod/v3/types.d.ts",
          "node_modules/zod/src/v4/core/schemas.ts",
          "node_modules/zod/src/v4/core/api.ts",
          "node_modules/zod/src/v4/core/to-json-schema.ts",
          "node_modules/zod/src/v4/core/checks.ts",
          "node_modules/zod/src/v4/core/util.ts",
          "node_modules/zod/src/v4/mini/tests/index.test.ts",
          "node_modules/zod/src/v4/mini/schemas.ts",
          "node_modules/zod/src/v4/classic/tests/template-literal.test.ts",
          "node_modules/zod/src/v4/classic/tests/index.test.ts",
          "node_modules/zod/src/v4/classic/tests/error-utils.test.ts",
          "node_modules/zod/src/v4/classic/tests/string.test.ts",
          "node_modules/zod/src/v4/classic/tests/discriminated-unions.test.ts",
          "node_modules/zod/src/v4/classic/tests/to-json-schema.test.ts",
          "node_modules/zod/src/v4/classic/tests/refine.test.ts",
          "node_modules/zod/src/v4/classic/tests/error.test.ts",
          "node_modules/zod/src/v4/classic/tests/object.test.ts",
          "node_modules/zod/src/v4/classic/schemas.ts",
          "node_modules/zod/src/v3/tests/string.test.ts",
          "node_modules/zod/src/v3/tests/error.test.ts",
          "node_modules/zod/src/v3/types.ts",
          "node_modules/@types/node/diagnostics_channel.d.ts",
          "node_modules/@types/node/tls.d.ts",
          "node_modules/@types/node/readline.d.ts",
          "node_modules/@types/node/crypto.d.ts",
          "node_modules/@types/node/events.d.ts",
          "node_modules/@types/node/buffer.d.ts",
          "node_modules/@types/node/worker_threads.d.ts",
          "node_modules/@types/node/async_hooks.d.ts",
          "node_modules/@types/node/stream/web.d.ts",
          "node_modules/@types/node/dns.d.ts",
          "node_modules/@types/node/vm.d.ts",
          "node_modules/@types/node/test.d.ts",
          "node_modules/@types/node/http.d.ts",
          "node_modules/@types/node/http2.d.ts",
          "node_modules/@types/node/stream.d.ts",
          "node_modules/@types/node/inspector.d.ts",
          "node_modules/@types/node/v8.d.ts",
          "node_modules/@types/node/perf_hooks.d.ts",
          "node_modules/@types/node/url.d.ts",
          "node_modules/@types/node/cluster.d.ts",
          "node_modules/@types/node/https.d.ts",
          "node_modules/@types/node/assert.d.ts",
          "node_modules/@types/node/fs.d.ts",
          "node_modules/@types/node/dgram.d.ts",
          "node_modules/@types/node/child_process.d.ts",
          "node_modules/@types/node/zlib.d.ts",
          "node_modules/@types/node/module.d.ts",
          "node_modules/@types/node/sqlite.d.ts",
          "node_modules/@types/node/process.d.ts",
          "node_modules/@types/node/util.d.ts",
          "node_modules/@types/node/dns/promises.d.ts",
          "node_modules/@types/node/fs/promises.d.ts",
          "node_modules/@types/node/net.d.ts",
          "node_modules/proxy-agent/node_modules/lru-cache/index.d.ts",
          "node_modules/type-fest/source/package-json.d.ts",
          "node_modules/type-fest/source/tsconfig-json.d.ts",
          "node_modules/ip-address/src/ipv6.ts",
          "node_modules/moment/moment.d.ts",
          "node_modules/moment/ts3.1-typings/moment.d.ts",
          "node_modules/puppeteer/lib/types.d.ts",
          "node_modules/ast-types/gen/builders.d.ts",
          "node_modules/ast-types/gen/namedTypes.d.ts",
          "node_modules/smart-buffer/typings/smartbuffer.d.ts",
          "node_modules/devtools-protocol/types/protocol-mapping.d.ts",
          "node_modules/devtools-protocol/types/protocol-tests-proxy-api.d.ts",
          "node_modules/devtools-protocol/types/protocol.d.ts",
          "node_modules/devtools-protocol/types/protocol-proxy-api.d.ts",
          "node_modules/bare-fs/index.d.ts",
          "node_modules/fecha/src/fecha.ts",
          "node_modules/chromium-bidi/lib/esm/protocol/generated/webdriver-bidi.d.ts",
          "node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi.d.ts",
          "node_modules/chromium-bidi/lib/esm/protocol-parser/generated/webdriver-bidi-bluetooth.d.ts",
          "node_modules/chromium-bidi/lib/cjs/protocol/generated/webdriver-bidi.d.ts",
          "node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts",
          "node_modules/chromium-bidi/lib/cjs/protocol-parser/generated/webdriver-bidi-bluetooth.d.ts",
          "node_modules/@supabase/auth-js/dist/module/GoTrueClient.d.ts",
          "node_modules/@supabase/auth-js/dist/module/lib/types.d.ts",
          "node_modules/@supabase/auth-js/dist/main/GoTrueClient.d.ts",
          "node_modules/@supabase/auth-js/dist/main/lib/types.d.ts",
          "node_modules/@supabase/auth-js/src/lib/types.ts",
          "node_modules/@supabase/auth-js/src/GoTrueClient.ts",
          "node_modules/@supabase/realtime-js/src/RealtimeClient.ts",
          "node_modules/@supabase/realtime-js/src/RealtimeChannel.ts",
          "node_modules/@supabase/storage-js/src/packages/StorageFileApi.ts",
          "node_modules/@supabase/postgrest-js/src/PostgrestFilterBuilder.ts",
          "node_modules/@supabase/postgrest-js/src/select-query-parser/utils.ts",
          "node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts",
          "node_modules/rxjs/src/internal/testing/TestScheduler.ts",
          "node_modules/rxjs/src/internal/ajax/ajax.ts",
          "node_modules/puppeteer-core/lib/esm/puppeteer/api/ElementHandle.d.ts",
          "node_modules/puppeteer-core/lib/esm/puppeteer/api/Frame.d.ts",
          "node_modules/puppeteer-core/lib/esm/puppeteer/api/Page.d.ts",
          "node_modules/puppeteer-core/lib/types.d.ts",
          "node_modules/puppeteer-core/lib/es5-iife/puppeteer-core-browser.d.ts",
          "node_modules/puppeteer-core/lib/cjs/puppeteer/api/ElementHandle.d.ts",
          "node_modules/puppeteer-core/lib/cjs/puppeteer/api/Frame.d.ts",
          "node_modules/puppeteer-core/lib/cjs/puppeteer/api/Page.d.ts",
          "node_modules/puppeteer-core/src/cdp/EmulationManager.ts",
          "node_modules/puppeteer-core/src/cdp/ExecutionContext.ts",
          "node_modules/puppeteer-core/src/cdp/FrameManager.ts",
          "node_modules/puppeteer-core/src/cdp/Accessibility.ts",
          "node_modules/puppeteer-core/src/cdp/NetworkManager.ts",
          "node_modules/puppeteer-core/src/cdp/Input.ts",
          "node_modules/puppeteer-core/src/cdp/Page.ts",
          "node_modules/puppeteer-core/src/cdp/Coverage.ts",
          "node_modules/puppeteer-core/src/bidi/core/BrowsingContext.ts",
          "node_modules/puppeteer-core/src/bidi/Frame.ts",
          "node_modules/puppeteer-core/src/bidi/Input.ts",
          "node_modules/puppeteer-core/src/bidi/Page.ts",
          "node_modules/puppeteer-core/src/common/USKeyboardLayout.ts",
          "node_modules/puppeteer-core/src/common/Device.ts",
          "node_modules/puppeteer-core/src/api/HTTPRequest.ts",
          "node_modules/puppeteer-core/src/api/Frame.ts",
          "node_modules/puppeteer-core/src/api/Input.ts",
          "node_modules/puppeteer-core/src/api/locators/locators.ts",
          "node_modules/puppeteer-core/src/api/Browser.ts",
          "node_modules/puppeteer-core/src/api/Page.ts",
          "node_modules/puppeteer-core/src/api/ElementHandle.ts",
          "node_modules/puppeteer-core/src/node/BrowserLauncher.ts",
          "node_modules/@puppeteer/browsers/src/install.ts",
          "node_modules/@puppeteer/browsers/src/CLI.ts",
          "node_modules/@puppeteer/browsers/src/launch.ts",
          "node_modules/simple-git/dist/typings/response.d.ts",
          "node_modules/simple-git/dist/typings/simple-git.d.ts",
          "../total"
        ],
        "duplicateCode": false,
        "missingTests": []
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "refactor-complex",
          "description": "Refactor 128 complex files",
          "impact": "medium",
          "timeEstimate": "1 hour",
          "howTo": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 868 TODOs",
          "impact": "medium",
          "timeEstimate": "8680 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        },
        {
          "feature": "swarm coordination",
          "benefit": "Use multiple agents in parallel for 2.8x speedup",
          "command": "Launch multiple Task() agents concurrently"
        }
      ],
      "timeToComplete": 8688
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/shell-viewer/frontend",
      "name": "pachacuti-shell-viewer-frontend",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 5193,
      "issues": [
        "Has uncommitted changes",
        "5193 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 73022,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [
          "node_modules/workbox-strategies/src/StrategyHandler.ts",
          "node_modules/idb/build/entry.d.ts",
          "node_modules/@types/node-forge/index.d.ts",
          "node_modules/@types/d3-shape/index.d.ts",
          "node_modules/@types/express-serve-static-core/index.d.ts",
          "node_modules/@types/d3-array/index.d.ts",
          "node_modules/@types/express/node_modules/@types/express-serve-static-core/index.d.ts",
          "node_modules/@types/d3-scale/index.d.ts",
          "node_modules/@types/prettier/index.d.ts",
          "node_modules/@types/d3-color/index.d.ts",
          "node_modules/@types/d3-time/index.d.ts",
          "node_modules/@types/babel__traverse/index.d.ts",
          "node_modules/@types/yargs/index.d.ts",
          "node_modules/@types/eslint/rules/best-practices.d.ts",
          "node_modules/@types/eslint/rules/stylistic-issues.d.ts",
          "node_modules/@types/eslint/rules/ecmascript-6.d.ts",
          "node_modules/@types/eslint/rules/possible-errors.d.ts",
          "node_modules/@types/eslint/index.d.ts",
          "node_modules/@types/estree/index.d.ts",
          "node_modules/@types/node/diagnostics_channel.d.ts",
          "node_modules/@types/node/tls.d.ts",
          "node_modules/@types/node/readline.d.ts",
          "node_modules/@types/node/crypto.d.ts",
          "node_modules/@types/node/events.d.ts",
          "node_modules/@types/node/buffer.d.ts",
          "node_modules/@types/node/worker_threads.d.ts",
          "node_modules/@types/node/async_hooks.d.ts",
          "node_modules/@types/node/stream/web.d.ts",
          "node_modules/@types/node/dns.d.ts",
          "node_modules/@types/node/vm.d.ts",
          "node_modules/@types/node/test.d.ts",
          "node_modules/@types/node/http.d.ts",
          "node_modules/@types/node/http2.d.ts",
          "node_modules/@types/node/stream.d.ts",
          "node_modules/@types/node/inspector.d.ts",
          "node_modules/@types/node/v8.d.ts",
          "node_modules/@types/node/perf_hooks.d.ts",
          "node_modules/@types/node/url.d.ts",
          "node_modules/@types/node/cluster.d.ts",
          "node_modules/@types/node/https.d.ts",
          "node_modules/@types/node/assert.d.ts",
          "node_modules/@types/node/fs.d.ts",
          "node_modules/@types/node/dgram.d.ts",
          "node_modules/@types/node/child_process.d.ts",
          "node_modules/@types/node/zlib.d.ts",
          "node_modules/@types/node/module.d.ts",
          "node_modules/@types/node/sqlite.d.ts",
          "node_modules/@types/node/process.d.ts",
          "node_modules/@types/node/util.d.ts",
          "node_modules/@types/node/dns/promises.d.ts",
          "node_modules/@types/node/fs/promises.d.ts",
          "node_modules/@types/node/net.d.ts",
          "node_modules/@types/babel__core/index.d.ts",
          "node_modules/@types/react/ts5.0/index.d.ts",
          "node_modules/@types/react/index.d.ts",
          "node_modules/@types/q/index.d.ts",
          "node_modules/@types/json-schema/index.d.ts",
          "node_modules/csstype/index.d.ts",
          "node_modules/tempy/node_modules/type-fest/source/package-json.d.ts",
          "node_modules/tempy/node_modules/type-fest/source/tsconfig-json.d.ts",
          "node_modules/type-fest/source/package-json.d.ts",
          "node_modules/type-fest/source/tsconfig-json.d.ts",
          "node_modules/commander/typings/index.d.ts",
          "node_modules/xterm/typings/xterm.d.ts",
          "node_modules/xterm/src/browser/renderer/shared/TextureAtlas.ts",
          "node_modules/xterm/src/browser/renderer/shared/CustomGlyphs.ts",
          "node_modules/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts",
          "node_modules/xterm/src/browser/renderer/dom/DomRenderer.ts",
          "node_modules/xterm/src/browser/Terminal.ts",
          "node_modules/xterm/src/browser/services/SelectionService.ts",
          "node_modules/xterm/src/common/InputHandler.ts",
          "node_modules/xterm/src/common/Types.d.ts",
          "node_modules/xterm/src/common/parser/EscapeSequenceParser.ts",
          "node_modules/xterm/src/common/buffer/Buffer.ts",
          "node_modules/xterm/src/common/buffer/BufferLine.ts",
          "node_modules/decimal.js-light/decimal.d.ts",
          "node_modules/acorn/dist/acorn.d.ts",
          "node_modules/axe-core/axe.d.ts",
          "node_modules/typescript/lib/lib.es2015.core.d.ts",
          "node_modules/typescript/lib/lib.es5.d.ts",
          "node_modules/typescript/lib/typescriptServices.d.ts",
          "node_modules/typescript/lib/lib.dom.d.ts",
          "node_modules/typescript/lib/lib.es2020.bigint.d.ts",
          "node_modules/typescript/lib/protocol.d.ts",
          "node_modules/typescript/lib/lib.webworker.d.ts",
          "node_modules/typescript/lib/tsserverlibrary.d.ts",
          "node_modules/typescript/lib/typescript.d.ts",
          "node_modules/socket.io-client/build/esm-debug/socket.d.ts",
          "node_modules/socket.io-client/build/esm/socket.d.ts",
          "node_modules/socket.io-client/build/cjs/socket.d.ts",
          "node_modules/date-fns/typings.d.ts",
          "node_modules/postcss/lib/node.d.ts",
          "node_modules/@rollup/pluginutils/node_modules/@types/estree/index.d.ts",
          "node_modules/@typescript-eslint/types/dist/generated/ast-spec.d.ts",
          "node_modules/@typescript-eslint/types/_ts3.4/dist/generated/ast-spec.d.ts",
          "node_modules/@typescript-eslint/utils/dist/ast-utils/helpers.d.ts",
          "node_modules/@typescript-eslint/utils/_ts3.4/dist/ast-utils/helpers.d.ts",
          "node_modules/@remix-run/router/history.ts",
          "node_modules/@remix-run/router/router.ts",
          "node_modules/@remix-run/router/dist/utils.d.ts",
          "node_modules/@remix-run/router/dist/router.d.ts",
          "node_modules/@remix-run/router/utils.ts",
          "node_modules/big-integer/BigInteger.d.ts",
          "node_modules/xterm-addon-search/src/SearchAddon.ts",
          "node_modules/enhanced-resolve/types.d.ts",
          "node_modules/postcss-modules-local-by-default/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts",
          "node_modules/saxes/saxes.d.ts",
          "node_modules/postcss-svgo/node_modules/commander/typings/index.d.ts",
          "../../total",
          "node_modules/@mui/icons-material/index.d.ts",
          "../../total",
          "node_modules/@mui/material/styles/components.d.ts",
          "node_modules/webpack/types.d.ts",
          "node_modules/resolve-url-loader/node_modules/postcss/lib/postcss.d.ts",
          "node_modules/workbox-build/build/types.d.ts",
          "node_modules/workbox-build/src/types.ts",
          "node_modules/webpack-dev-server/types/bin/cli-flags.d.ts",
          "node_modules/webpack-dev-server/types/lib/Server.d.ts",
          "node_modules/postcss-modules-scope/node_modules/postcss-selector-parser/postcss-selector-parser.d.ts",
          "node_modules/@babel/types/lib/index-legacy.d.ts",
          "node_modules/@babel/types/lib/index.d.ts",
          "node_modules/postcss-selector-parser/postcss-selector-parser.d.ts",
          "node_modules/rollup/dist/rollup.d.ts",
          "node_modules/ansi-escapes/node_modules/type-fest/source/package-json.d.ts",
          "node_modules/ansi-escapes/node_modules/type-fest/source/tsconfig-json.d.ts",
          "node_modules/minipass/dist/esm/index.d.ts",
          "node_modules/minipass/dist/commonjs/index.d.ts",
          "node_modules/execa/index.d.ts",
          "node_modules/@jridgewell/trace-mapping/src/trace-mapping.ts",
          "node_modules/@jridgewell/gen-mapping/src/gen-mapping.ts",
          "node_modules/workbox-window/src/Workbox.ts",
          "node_modules/recharts/types/util/types.d.ts",
          "node_modules/axios/index.d.ts",
          "node_modules/monaco-editor/monaco.d.ts",
          "node_modules/monaco-editor/esm/vs/editor/editor.api.d.ts",
          "node_modules/ajv/lib/core.ts",
          "node_modules/ajv/lib/compile/validate/index.ts",
          "node_modules/ajv/lib/compile/codegen/index.ts",
          "node_modules/@eslint-community/regexpp/index.d.ts",
          "node_modules/jest-watch-typeahead/node_modules/@types/yargs/index.d.ts",
          "node_modules/jest-watch-typeahead/node_modules/@jest/types/build/index.d.ts",
          "node_modules/jest-watch-typeahead/node_modules/emittery/index.d.ts",
          "node_modules/path-scurry/dist/esm/index.d.ts",
          "node_modules/path-scurry/dist/commonjs/index.d.ts",
          "node_modules/path-scurry/node_modules/lru-cache/dist/esm/index.d.ts",
          "node_modules/path-scurry/node_modules/lru-cache/dist/commonjs/index.d.ts",
          "../../total"
        ],
        "duplicateCode": false,
        "missingTests": []
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "refactor-complex",
          "description": "Refactor 147 complex files",
          "impact": "medium",
          "timeEstimate": "1 hour",
          "howTo": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 5193 TODOs",
          "impact": "medium",
          "timeEstimate": "51930 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        },
        {
          "feature": "swarm coordination",
          "benefit": "Use multiple agents in parallel for 2.8x speedup",
          "command": "Launch multiple Task() agents concurrently"
        }
      ],
      "timeToComplete": 51938
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/shell-viewer/backend",
      "name": "pachacuti-shell-viewer-backend",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 692,
      "issues": [
        "Has uncommitted changes",
        "692 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 5847,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [
          "node_modules/@types/babel__traverse/index.d.ts",
          "node_modules/@types/yargs/index.d.ts",
          "node_modules/@types/node/diagnostics_channel.d.ts",
          "node_modules/@types/node/tls.d.ts",
          "node_modules/@types/node/readline.d.ts",
          "node_modules/@types/node/crypto.d.ts",
          "node_modules/@types/node/events.d.ts",
          "node_modules/@types/node/buffer.d.ts",
          "node_modules/@types/node/worker_threads.d.ts",
          "node_modules/@types/node/async_hooks.d.ts",
          "node_modules/@types/node/stream/web.d.ts",
          "node_modules/@types/node/dns.d.ts",
          "node_modules/@types/node/vm.d.ts",
          "node_modules/@types/node/test.d.ts",
          "node_modules/@types/node/http.d.ts",
          "node_modules/@types/node/http2.d.ts",
          "node_modules/@types/node/stream.d.ts",
          "node_modules/@types/node/inspector.d.ts",
          "node_modules/@types/node/v8.d.ts",
          "node_modules/@types/node/perf_hooks.d.ts",
          "node_modules/@types/node/url.d.ts",
          "node_modules/@types/node/cluster.d.ts",
          "node_modules/@types/node/https.d.ts",
          "node_modules/@types/node/assert.d.ts",
          "node_modules/@types/node/fs.d.ts",
          "node_modules/@types/node/dgram.d.ts",
          "node_modules/@types/node/child_process.d.ts",
          "node_modules/@types/node/zlib.d.ts",
          "node_modules/@types/node/module.d.ts",
          "node_modules/@types/node/sqlite.d.ts",
          "node_modules/@types/node/process.d.ts",
          "node_modules/@types/node/util.d.ts",
          "node_modules/@types/node/dns/promises.d.ts",
          "node_modules/@types/node/fs/promises.d.ts",
          "node_modules/@types/node/net.d.ts",
          "node_modules/@types/babel__core/index.d.ts",
          "node_modules/web-streams-polyfill/types/ponyfill.d.ts",
          "node_modules/@jest/types/build/index.d.ts",
          "node_modules/type-fest/source/package-json.d.ts",
          "node_modules/type-fest/source/tsconfig-json.d.ts",
          "node_modules/ip-address/src/ipv6.ts",
          "node_modules/moment/moment.d.ts",
          "node_modules/moment/ts3.1-typings/moment.d.ts",
          "node_modules/emittery/index.d.ts",
          "node_modules/smart-buffer/typings/smartbuffer.d.ts",
          "node_modules/fecha/src/fecha.ts",
          "node_modules/socket.io/dist/socket.d.ts",
          "node_modules/socket.io/dist/index.d.ts",
          "node_modules/@sinclair/typebox/typebox.d.ts",
          "node_modules/@babel/types/lib/index-legacy.d.ts",
          "node_modules/@babel/types/lib/index.d.ts",
          "node_modules/@supabase/auth-js/dist/module/GoTrueClient.d.ts",
          "node_modules/@supabase/auth-js/dist/module/lib/types.d.ts",
          "node_modules/@supabase/auth-js/dist/main/GoTrueClient.d.ts",
          "node_modules/@supabase/auth-js/dist/main/lib/types.d.ts",
          "node_modules/@supabase/auth-js/src/lib/types.ts",
          "node_modules/@supabase/auth-js/src/GoTrueClient.ts",
          "node_modules/@supabase/realtime-js/src/RealtimeClient.ts",
          "node_modules/@supabase/realtime-js/src/RealtimeChannel.ts",
          "node_modules/@supabase/storage-js/src/packages/StorageFileApi.ts",
          "node_modules/@supabase/postgrest-js/src/PostgrestFilterBuilder.ts",
          "node_modules/@supabase/postgrest-js/src/select-query-parser/utils.ts",
          "node_modules/@supabase/postgrest-js/src/select-query-parser/result.ts",
          "node_modules/execa/index.d.ts",
          "node_modules/@jridgewell/trace-mapping/src/trace-mapping.ts",
          "node_modules/@jridgewell/gen-mapping/src/gen-mapping.ts",
          "node_modules/openai/resources/beta/realtime/realtime.d.ts",
          "node_modules/openai/resources/beta/realtime/sessions.d.ts",
          "node_modules/openai/resources/beta/threads/messages.d.ts",
          "node_modules/openai/resources/beta/threads/threads.d.ts",
          "node_modules/openai/resources/beta/threads/runs/steps.d.ts",
          "node_modules/openai/resources/beta/threads/runs/runs.d.ts",
          "node_modules/openai/resources/beta/assistants.d.ts",
          "node_modules/openai/resources/evals/evals.d.ts",
          "node_modules/openai/resources/evals/runs/runs.d.ts",
          "node_modules/openai/resources/chat/completions/completions.d.ts",
          "node_modules/openai/resources/responses/responses.d.ts",
          "node_modules/openai/resources/fine-tuning/jobs/jobs.d.ts",
          "node_modules/openai/node_modules/@types/node/diagnostics_channel.d.ts",
          "node_modules/openai/node_modules/@types/node/tls.d.ts",
          "node_modules/openai/node_modules/@types/node/readline.d.ts",
          "node_modules/openai/node_modules/@types/node/crypto.d.ts",
          "node_modules/openai/node_modules/@types/node/events.d.ts",
          "node_modules/openai/node_modules/@types/node/buffer.d.ts",
          "node_modules/openai/node_modules/@types/node/worker_threads.d.ts",
          "node_modules/openai/node_modules/@types/node/async_hooks.d.ts",
          "node_modules/openai/node_modules/@types/node/stream/web.d.ts",
          "node_modules/openai/node_modules/@types/node/dns.d.ts",
          "node_modules/openai/node_modules/@types/node/vm.d.ts",
          "node_modules/openai/node_modules/@types/node/test.d.ts",
          "node_modules/openai/node_modules/@types/node/http.d.ts",
          "node_modules/openai/node_modules/@types/node/http2.d.ts",
          "node_modules/openai/node_modules/@types/node/stream.d.ts",
          "node_modules/openai/node_modules/@types/node/inspector.d.ts",
          "node_modules/openai/node_modules/@types/node/v8.d.ts",
          "node_modules/openai/node_modules/@types/node/perf_hooks.d.ts",
          "node_modules/openai/node_modules/@types/node/url.d.ts",
          "node_modules/openai/node_modules/@types/node/cluster.d.ts",
          "node_modules/openai/node_modules/@types/node/https.d.ts",
          "node_modules/openai/node_modules/@types/node/assert.d.ts",
          "node_modules/openai/node_modules/@types/node/fs.d.ts",
          "node_modules/openai/node_modules/@types/node/dgram.d.ts",
          "node_modules/openai/node_modules/@types/node/child_process.d.ts",
          "node_modules/openai/node_modules/@types/node/zlib.d.ts",
          "node_modules/openai/node_modules/@types/node/module.d.ts",
          "node_modules/openai/node_modules/@types/node/process.d.ts",
          "node_modules/openai/node_modules/@types/node/util.d.ts",
          "node_modules/openai/node_modules/@types/node/fs/promises.d.ts",
          "node_modules/openai/node_modules/@types/node/net.d.ts",
          "node_modules/openai/src/resources/beta/realtime/realtime.ts",
          "node_modules/openai/src/resources/beta/realtime/sessions.ts",
          "node_modules/openai/src/resources/beta/threads/messages.ts",
          "node_modules/openai/src/resources/beta/threads/threads.ts",
          "node_modules/openai/src/resources/beta/threads/runs/runs.ts",
          "node_modules/openai/src/resources/beta/threads/runs/steps.ts",
          "node_modules/openai/src/resources/beta/assistants.ts",
          "node_modules/openai/src/resources/evals/evals.ts",
          "node_modules/openai/src/resources/evals/runs/runs.ts",
          "node_modules/openai/src/resources/chat/completions/completions.ts",
          "node_modules/openai/src/resources/responses/responses.ts",
          "node_modules/openai/src/resources/fine-tuning/jobs/jobs.ts",
          "node_modules/openai/src/resources/vector-stores/vector-stores.ts",
          "node_modules/openai/src/core.ts",
          "node_modules/openai/src/lib/AbstractChatCompletionRunner.ts",
          "node_modules/openai/src/lib/AssistantStream.ts",
          "node_modules/openai/src/lib/ChatCompletionStream.ts",
          "node_modules/openai/src/index.ts",
          "../../total"
        ],
        "duplicateCode": false,
        "missingTests": []
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "refactor-complex",
          "description": "Refactor 128 complex files",
          "impact": "medium",
          "timeEstimate": "1 hour",
          "howTo": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 692 TODOs",
          "impact": "medium",
          "timeEstimate": "6920 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        },
        {
          "feature": "swarm coordination",
          "benefit": "Use multiple agents in parallel for 2.8x speedup",
          "command": "Launch multiple Task() agents concurrently"
        }
      ],
      "timeToComplete": 6928
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/pend",
      "name": "pend",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/fd-slicer",
      "name": "fd-slicer",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/callsites",
      "name": "callsites",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 2,
      "issues": [
        "Has uncommitted changes",
        "2 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 2 TODOs",
          "impact": "medium",
          "timeEstimate": "20 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 52
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/zod",
      "name": "zod",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 1,
      "issues": [
        "Has uncommitted changes",
        "1 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 417,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [
          "v4/core/schemas.d.ts",
          "v4/classic/schemas.d.ts",
          "v3/types.d.ts",
          "src/v4/core/schemas.ts",
          "src/v4/core/api.ts",
          "src/v4/core/to-json-schema.ts",
          "src/v4/core/checks.ts",
          "src/v4/core/util.ts",
          "src/v4/mini/tests/index.test.ts",
          "src/v4/mini/schemas.ts",
          "src/v4/classic/tests/template-literal.test.ts",
          "src/v4/classic/tests/index.test.ts",
          "src/v4/classic/tests/error-utils.test.ts",
          "src/v4/classic/tests/string.test.ts",
          "src/v4/classic/tests/discriminated-unions.test.ts",
          "src/v4/classic/tests/to-json-schema.test.ts",
          "src/v4/classic/tests/refine.test.ts",
          "src/v4/classic/tests/error.test.ts",
          "src/v4/classic/tests/object.test.ts",
          "src/v4/classic/schemas.ts",
          "src/v3/tests/string.test.ts",
          "src/v3/tests/error.test.ts",
          "src/v3/types.ts",
          "../../total"
        ],
        "duplicateCode": false,
        "missingTests": []
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "refactor-complex",
          "description": "Refactor 24 complex files",
          "impact": "medium",
          "timeEstimate": "1 hour",
          "howTo": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 1 TODOs",
          "impact": "medium",
          "timeEstimate": "10 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        },
        {
          "feature": "swarm coordination",
          "benefit": "Use multiple agents in parallel for 2.8x speedup",
          "command": "Launch multiple Task() agents concurrently"
        }
      ],
      "timeToComplete": 18
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/json-parse-even-better-errors",
      "name": "json-parse-even-better-errors",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/typed-query-selector",
      "name": "typed-query-selector",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 3,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/strip-ansi",
      "name": "strip-ansi",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/proxy-agent",
      "name": "proxy-agent",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/agent-base",
      "name": "agent-base",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 4,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/text-decoder",
      "name": "text-decoder",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 4,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/ms",
      "name": "ms",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/dotenv",
      "name": "dotenv",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 6,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/lru-cache",
      "name": "lru-cache",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [
          "index.d.ts"
        ],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "refactor-complex",
          "description": "Refactor 1 complex files",
          "impact": "medium",
          "timeEstimate": "1 hour",
          "howTo": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 33
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/require-directory",
      "name": "require-directory",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/escalade",
      "name": "escalade",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 4,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/ip-address",
      "name": "ip-address",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 8,
      "issues": [
        "Has uncommitted changes",
        "8 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 27,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [
          "src/ipv6.ts",
          "../../total"
        ],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "refactor-complex",
          "description": "Refactor 2 complex files",
          "impact": "medium",
          "timeEstimate": "1 hour",
          "howTo": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 8 TODOs",
          "impact": "medium",
          "timeEstimate": "80 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        },
        {
          "feature": "swarm coordination",
          "benefit": "Use multiple agents in parallel for 2.8x speedup",
          "command": "Launch multiple Task() agents concurrently"
        }
      ],
      "timeToComplete": 118
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/error-ex",
      "name": "error-ex",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/progress",
      "name": "progress",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 1,
      "issues": [
        "Has uncommitted changes",
        "1 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 1 TODOs",
          "impact": "medium",
          "timeEstimate": "10 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 42
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/puppeteer",
      "name": "puppeteer",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 21,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [
          "lib/types.d.ts",
          "../../total"
        ],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "refactor-complex",
          "description": "Refactor 2 complex files",
          "impact": "medium",
          "timeEstimate": "1 hour",
          "howTo": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        },
        {
          "feature": "swarm coordination",
          "benefit": "Use multiple agents in parallel for 2.8x speedup",
          "command": "Launch multiple Task() agents concurrently"
        }
      ],
      "timeToComplete": 38
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/parse-json",
      "name": "parse-json",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/buffer-crc32",
      "name": "buffer-crc32",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/ast-types",
      "name": "ast-types",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 15,
      "issues": [
        "Has uncommitted changes",
        "15 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 52,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [
          "gen/builders.d.ts",
          "gen/namedTypes.d.ts",
          "../../total"
        ],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "refactor-complex",
          "description": "Refactor 3 complex files",
          "impact": "medium",
          "timeEstimate": "1 hour",
          "howTo": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 15 TODOs",
          "impact": "medium",
          "timeEstimate": "150 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        },
        {
          "feature": "swarm coordination",
          "benefit": "Use multiple agents in parallel for 2.8x speedup",
          "command": "Launch multiple Task() agents concurrently"
        }
      ],
      "timeToComplete": 188
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/extract-zip",
      "name": "extract-zip",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 3,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/wrap-ansi",
      "name": "wrap-ansi",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/y18n",
      "name": "y18n",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 3,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/once",
      "name": "once",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/bare-path",
      "name": "bare-path",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 5,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/proxy-from-env",
      "name": "proxy-from-env",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 1,
      "issues": [
        "Has uncommitted changes",
        "1 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 1 TODOs",
          "impact": "medium",
          "timeEstimate": "10 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 42
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/get-uri",
      "name": "get-uri",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 1,
      "issues": [
        "Has uncommitted changes",
        "1 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 18,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 1 TODOs",
          "impact": "medium",
          "timeEstimate": "10 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 47
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/tslib",
      "name": "tslib",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 5,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/argparse",
      "name": "argparse",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 3,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/socks-proxy-agent",
      "name": "socks-proxy-agent",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/is-fullwidth-code-point",
      "name": "is-fullwidth-code-point",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/env-paths",
      "name": "env-paths",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 2,
      "issues": [
        "Has uncommitted changes",
        "2 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 2 TODOs",
          "impact": "medium",
          "timeEstimate": "20 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 52
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/yargs-parser",
      "name": "yargs-parser",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 6,
      "issues": [
        "Has uncommitted changes",
        "6 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 6,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 6 TODOs",
          "impact": "medium",
          "timeEstimate": "60 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 92
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/color-name",
      "name": "color-name",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/js-yaml",
      "name": "js-yaml",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 4,
      "issues": [
        "Has uncommitted changes",
        "4 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 28,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 4 TODOs",
          "impact": "medium",
          "timeEstimate": "40 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        },
        {
          "feature": "swarm coordination",
          "benefit": "Use multiple agents in parallel for 2.8x speedup",
          "command": "Launch multiple Task() agents concurrently"
        }
      ],
      "timeToComplete": 77
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/smart-buffer",
      "name": "smart-buffer",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 4,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [
          "typings/smartbuffer.d.ts",
          "../../total"
        ],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "refactor-complex",
          "description": "Refactor 2 complex files",
          "impact": "medium",
          "timeEstimate": "1 hour",
          "howTo": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 33
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/parent-module",
      "name": "parent-module",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/devtools-protocol",
      "name": "devtools-protocol",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 17,
      "issues": [
        "Has uncommitted changes",
        "17 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 4,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [
          "types/protocol-mapping.d.ts",
          "types/protocol-tests-proxy-api.d.ts",
          "types/protocol.d.ts",
          "types/protocol-proxy-api.d.ts",
          "../../total"
        ],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "refactor-complex",
          "description": "Refactor 5 complex files",
          "impact": "medium",
          "timeEstimate": "1 hour",
          "howTo": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 17 TODOs",
          "impact": "medium",
          "timeEstimate": "170 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 203
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/tar-stream",
      "name": "tar-stream",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 1,
      "issues": [
        "Has uncommitted changes",
        "1 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 5,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 1 TODOs",
          "impact": "medium",
          "timeEstimate": "10 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 42
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/bare-fs",
      "name": "bare-fs",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 7,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [
          "index.d.ts",
          "../../total"
        ],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "refactor-complex",
          "description": "Refactor 2 complex files",
          "impact": "medium",
          "timeEstimate": "1 hour",
          "howTo": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 33
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/netmask",
      "name": "netmask",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/undici-types",
      "name": "undici-types",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 17,
      "issues": [
        "Has uncommitted changes",
        "17 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 41,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [
          "../../total"
        ],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "refactor-complex",
          "description": "Refactor 1 complex files",
          "impact": "medium",
          "timeEstimate": "1 hour",
          "howTo": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 17 TODOs",
          "impact": "medium",
          "timeEstimate": "170 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        },
        {
          "feature": "swarm coordination",
          "benefit": "Use multiple agents in parallel for 2.8x speedup",
          "command": "Launch multiple Task() agents concurrently"
        }
      ],
      "timeToComplete": 208
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/end-of-stream",
      "name": "end-of-stream",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/bare-os",
      "name": "bare-os",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 5,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/esutils",
      "name": "esutils",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 4,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/bare-stream",
      "name": "bare-stream",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 6,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/ansi-regex",
      "name": "ansi-regex",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/esprima",
      "name": "esprima",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 3,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/basic-ftp",
      "name": "basic-ftp",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 2,
      "issues": [
        "Has uncommitted changes",
        "2 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 28,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [
          "../../total"
        ],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "refactor-complex",
          "description": "Refactor 1 complex files",
          "impact": "medium",
          "timeEstimate": "1 hour",
          "howTo": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 2 TODOs",
          "impact": "medium",
          "timeEstimate": "20 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        },
        {
          "feature": "swarm coordination",
          "benefit": "Use multiple agents in parallel for 2.8x speedup",
          "command": "Launch multiple Task() agents concurrently"
        }
      ],
      "timeToComplete": 58
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/color-convert",
      "name": "color-convert",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 3,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/get-caller-file",
      "name": "get-caller-file",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/picocolors",
      "name": "picocolors",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 4,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/lines-and-columns",
      "name": "lines-and-columns",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/semver",
      "name": "semver",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 1,
      "issues": [
        "Has uncommitted changes",
        "1 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 48,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 1 TODOs",
          "impact": "medium",
          "timeEstimate": "10 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        },
        {
          "feature": "swarm coordination",
          "benefit": "Use multiple agents in parallel for 2.8x speedup",
          "command": "Launch multiple Task() agents concurrently"
        }
      ],
      "timeToComplete": 47
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/b4a",
      "name": "b4a",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 7,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/chromium-bidi",
      "name": "chromium-bidi",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 154,
      "issues": [
        "Has uncommitted changes",
        "154 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 375,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [
          "lib/esm/protocol/generated/webdriver-bidi.d.ts",
          "lib/esm/protocol-parser/generated/webdriver-bidi.d.ts",
          "lib/esm/protocol-parser/generated/webdriver-bidi-bluetooth.d.ts",
          "lib/cjs/protocol/generated/webdriver-bidi.d.ts",
          "lib/cjs/protocol-parser/generated/webdriver-bidi.d.ts",
          "lib/cjs/protocol-parser/generated/webdriver-bidi-bluetooth.d.ts",
          "../../total"
        ],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "refactor-complex",
          "description": "Refactor 7 complex files",
          "impact": "medium",
          "timeEstimate": "1 hour",
          "howTo": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 154 TODOs",
          "impact": "medium",
          "timeEstimate": "1540 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        },
        {
          "feature": "swarm coordination",
          "benefit": "Use multiple agents in parallel for 2.8x speedup",
          "command": "Launch multiple Task() agents concurrently"
        }
      ],
      "timeToComplete": 1578
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/estraverse",
      "name": "estraverse",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/ansi-styles",
      "name": "ansi-styles",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/js-tokens",
      "name": "js-tokens",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/fast-fifo",
      "name": "fast-fifo",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/pump",
      "name": "pump",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 3,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/get-stream",
      "name": "get-stream",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 2,
      "issues": [
        "Has uncommitted changes",
        "2 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 3,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 2 TODOs",
          "impact": "medium",
          "timeEstimate": "20 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 52
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/is-arrayish",
      "name": "is-arrayish",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/cliui",
      "name": "cliui",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 1,
      "issues": [
        "Has uncommitted changes",
        "1 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 1 TODOs",
          "impact": "medium",
          "timeEstimate": "10 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 42
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/yargs",
      "name": "yargs",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 22,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        },
        {
          "feature": "swarm coordination",
          "benefit": "Use multiple agents in parallel for 2.8x speedup",
          "command": "Launch multiple Task() agents concurrently"
        }
      ],
      "timeToComplete": 37
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/pac-proxy-agent",
      "name": "pac-proxy-agent",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/tar-fs",
      "name": "tar-fs",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 2,
      "issues": [
        "Has uncommitted changes",
        "2 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 2 TODOs",
          "impact": "medium",
          "timeEstimate": "20 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 52
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/socks",
      "name": "socks",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 12,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 37
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/import-fresh",
      "name": "import-fresh",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/source-map",
      "name": "source-map",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 15,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 37
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/degenerator",
      "name": "degenerator",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 6,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/puppeteer-core",
      "name": "puppeteer-core",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 79,
      "issues": [
        "Has uncommitted changes",
        "79 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 850,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [
          "lib/esm/puppeteer/api/ElementHandle.d.ts",
          "lib/esm/puppeteer/api/Frame.d.ts",
          "lib/esm/puppeteer/api/Page.d.ts",
          "lib/types.d.ts",
          "lib/es5-iife/puppeteer-core-browser.d.ts",
          "lib/cjs/puppeteer/api/ElementHandle.d.ts",
          "lib/cjs/puppeteer/api/Frame.d.ts",
          "lib/cjs/puppeteer/api/Page.d.ts",
          "src/cdp/EmulationManager.ts",
          "src/cdp/ExecutionContext.ts",
          "src/cdp/FrameManager.ts",
          "src/cdp/Accessibility.ts",
          "src/cdp/NetworkManager.ts",
          "src/cdp/Input.ts",
          "src/cdp/Page.ts",
          "src/cdp/Coverage.ts",
          "src/bidi/core/BrowsingContext.ts",
          "src/bidi/Frame.ts",
          "src/bidi/Input.ts",
          "src/bidi/Page.ts",
          "src/common/USKeyboardLayout.ts",
          "src/common/Device.ts",
          "src/api/HTTPRequest.ts",
          "src/api/Frame.ts",
          "src/api/Input.ts",
          "src/api/locators/locators.ts",
          "src/api/Browser.ts",
          "src/api/Page.ts",
          "src/api/ElementHandle.ts",
          "src/node/BrowserLauncher.ts",
          "../../total"
        ],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "refactor-complex",
          "description": "Refactor 31 complex files",
          "impact": "medium",
          "timeEstimate": "1 hour",
          "howTo": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 79 TODOs",
          "impact": "medium",
          "timeEstimate": "790 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        },
        {
          "feature": "swarm coordination",
          "benefit": "Use multiple agents in parallel for 2.8x speedup",
          "command": "Launch multiple Task() agents concurrently"
        }
      ],
      "timeToComplete": 828
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/escodegen",
      "name": "escodegen",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 3,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/cosmiconfig",
      "name": "cosmiconfig",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 28,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        },
        {
          "feature": "swarm coordination",
          "benefit": "Use multiple agents in parallel for 2.8x speedup",
          "command": "Launch multiple Task() agents concurrently"
        }
      ],
      "timeToComplete": 37
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/https-proxy-agent",
      "name": "https-proxy-agent",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 4,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/string-width",
      "name": "string-width",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 2,
      "issues": [
        "Has uncommitted changes",
        "2 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 2 TODOs",
          "impact": "medium",
          "timeEstimate": "20 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 52
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/streamx",
      "name": "streamx",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 1,
      "issues": [
        "Has uncommitted changes",
        "1 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 1 TODOs",
          "impact": "medium",
          "timeEstimate": "10 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 42
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/yauzl",
      "name": "yauzl",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 1,
      "issues": [
        "Has uncommitted changes",
        "1 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 1 TODOs",
          "impact": "medium",
          "timeEstimate": "10 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 42
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/wrappy",
      "name": "wrappy",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/http-proxy-agent",
      "name": "http-proxy-agent",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 2,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/resolve-from",
      "name": "resolve-from",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 1,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/data-uri-to-buffer",
      "name": "data-uri-to-buffer",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 6,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/emoji-regex",
      "name": "emoji-regex",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 5,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/ws",
      "name": "ws",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 15,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 37
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/pac-resolver",
      "name": "pac-resolver",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 1,
      "issues": [
        "Has uncommitted changes",
        "1 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 30,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "parallel-execution",
          "description": "Use batch file operations for faster processing",
          "impact": "high",
          "timeEstimate": "5 minutes",
          "howTo": "Use MultiEdit and batch Read operations in single message"
        },
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 1 TODOs",
          "impact": "medium",
          "timeEstimate": "10 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        },
        {
          "feature": "swarm coordination",
          "benefit": "Use multiple agents in parallel for 2.8x speedup",
          "command": "Launch multiple Task() agents concurrently"
        }
      ],
      "timeToComplete": 47
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/bare-events",
      "name": "bare-events",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 3,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/debug",
      "name": "debug",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 1,
      "issues": [
        "Has uncommitted changes",
        "1 TODOs/FIXMEs found"
      ],
      "metrics": {
        "fileCount": 4,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        },
        {
          "type": "complete-todos",
          "description": "Complete 1 TODOs",
          "impact": "medium",
          "timeEstimate": "10 minutes",
          "howTo": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 42
    },
    {
      "path": "/Users/Danallovertheplace/pachacuti/node_modules/mitt",
      "name": "mitt",
      "type": "node",
      "language": "javascript",
      "lastModified": "2025-08-24T16:12:31.000Z",
      "status": "uncommitted-changes",
      "todoCount": 0,
      "issues": [
        "Has uncommitted changes"
      ],
      "metrics": {
        "fileCount": 3,
        "totalLines": 0,
        "testCoverage": "unknown",
        "complexFiles": [],
        "duplicateCode": false,
        "missingTests": [
          "No test files found"
        ]
      },
      "optimizations": [
        {
          "type": "add-tests",
          "description": "Add test coverage with TDD agents",
          "impact": "high",
          "timeEstimate": "30 minutes",
          "howTo": "Use Task(\"tester\", \"Generate comprehensive test suite\")"
        },
        {
          "type": "commit-changes",
          "description": "Commit pending changes",
          "impact": "low",
          "timeEstimate": "2 minutes",
          "howTo": "Use git commit workflow with proper message format"
        }
      ],
      "newFeatures": [
        {
          "feature": "cicd-engineer agent",
          "benefit": "Automatically set up GitHub Actions CI/CD",
          "command": "Task(\"cicd-engineer\", \"Create GitHub Actions workflow\")"
        },
        {
          "feature": "api-docs agent",
          "benefit": "Generate OpenAPI documentation",
          "command": "Task(\"api-docs\", \"Generate API documentation\")"
        }
      ],
      "timeToComplete": 32
    }
  ],
  "recommendations": [
    {
      "project": "pachacuti",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "pachacuti",
      "type": "refactor-complex",
      "description": "Refactor 508 complex files",
      "impact": "medium",
      "timeEstimate": "1 hour",
      "implementation": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")",
      "priority": "urgent"
    },
    {
      "project": "pachacuti",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "pachacuti",
      "type": "complete-todos",
      "description": "Complete 7134 TODOs",
      "impact": "medium",
      "timeEstimate": "71340 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "low"
    },
    {
      "project": "pachacuti-session-recorder",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "pachacuti-session-recorder",
      "type": "refactor-complex",
      "description": "Refactor 128 complex files",
      "impact": "medium",
      "timeEstimate": "1 hour",
      "implementation": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")",
      "priority": "urgent"
    },
    {
      "project": "pachacuti-session-recorder",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "pachacuti-session-recorder",
      "type": "complete-todos",
      "description": "Complete 868 TODOs",
      "impact": "medium",
      "timeEstimate": "8680 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "low"
    },
    {
      "project": "pachacuti-shell-viewer-frontend",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "pachacuti-shell-viewer-frontend",
      "type": "refactor-complex",
      "description": "Refactor 147 complex files",
      "impact": "medium",
      "timeEstimate": "1 hour",
      "implementation": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")",
      "priority": "urgent"
    },
    {
      "project": "pachacuti-shell-viewer-frontend",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "pachacuti-shell-viewer-frontend",
      "type": "complete-todos",
      "description": "Complete 5193 TODOs",
      "impact": "medium",
      "timeEstimate": "51930 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "low"
    },
    {
      "project": "pachacuti-shell-viewer-backend",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "pachacuti-shell-viewer-backend",
      "type": "refactor-complex",
      "description": "Refactor 128 complex files",
      "impact": "medium",
      "timeEstimate": "1 hour",
      "implementation": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")",
      "priority": "urgent"
    },
    {
      "project": "pachacuti-shell-viewer-backend",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "pachacuti-shell-viewer-backend",
      "type": "complete-todos",
      "description": "Complete 692 TODOs",
      "impact": "medium",
      "timeEstimate": "6920 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "low"
    },
    {
      "project": "pend",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "pend",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "fd-slicer",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "fd-slicer",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "callsites",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "callsites",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "callsites",
      "type": "complete-todos",
      "description": "Complete 2 TODOs",
      "impact": "medium",
      "timeEstimate": "20 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "high"
    },
    {
      "project": "zod",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "zod",
      "type": "refactor-complex",
      "description": "Refactor 24 complex files",
      "impact": "medium",
      "timeEstimate": "1 hour",
      "implementation": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")",
      "priority": "urgent"
    },
    {
      "project": "zod",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "zod",
      "type": "complete-todos",
      "description": "Complete 1 TODOs",
      "impact": "medium",
      "timeEstimate": "10 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "urgent"
    },
    {
      "project": "json-parse-even-better-errors",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "json-parse-even-better-errors",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "typed-query-selector",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "typed-query-selector",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "strip-ansi",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "strip-ansi",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "proxy-agent",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "proxy-agent",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "agent-base",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "agent-base",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "text-decoder",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "text-decoder",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "ms",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "ms",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "dotenv",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "dotenv",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "lru-cache",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "lru-cache",
      "type": "refactor-complex",
      "description": "Refactor 1 complex files",
      "impact": "medium",
      "timeEstimate": "1 hour",
      "implementation": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")",
      "priority": "urgent"
    },
    {
      "project": "lru-cache",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "require-directory",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "require-directory",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "escalade",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "escalade",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "ip-address",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "ip-address",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "ip-address",
      "type": "refactor-complex",
      "description": "Refactor 2 complex files",
      "impact": "medium",
      "timeEstimate": "1 hour",
      "implementation": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")",
      "priority": "urgent"
    },
    {
      "project": "ip-address",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "ip-address",
      "type": "complete-todos",
      "description": "Complete 8 TODOs",
      "impact": "medium",
      "timeEstimate": "80 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "medium"
    },
    {
      "project": "error-ex",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "error-ex",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "progress",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "progress",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "progress",
      "type": "complete-todos",
      "description": "Complete 1 TODOs",
      "impact": "medium",
      "timeEstimate": "10 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "urgent"
    },
    {
      "project": "puppeteer",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "puppeteer",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "puppeteer",
      "type": "refactor-complex",
      "description": "Refactor 2 complex files",
      "impact": "medium",
      "timeEstimate": "1 hour",
      "implementation": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")",
      "priority": "urgent"
    },
    {
      "project": "puppeteer",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "parse-json",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "parse-json",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "buffer-crc32",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "buffer-crc32",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "ast-types",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "ast-types",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "ast-types",
      "type": "refactor-complex",
      "description": "Refactor 3 complex files",
      "impact": "medium",
      "timeEstimate": "1 hour",
      "implementation": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")",
      "priority": "urgent"
    },
    {
      "project": "ast-types",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "ast-types",
      "type": "complete-todos",
      "description": "Complete 15 TODOs",
      "impact": "medium",
      "timeEstimate": "150 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "medium"
    },
    {
      "project": "extract-zip",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "extract-zip",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "wrap-ansi",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "wrap-ansi",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "y18n",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "y18n",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "once",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "once",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "bare-path",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "bare-path",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "proxy-from-env",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "proxy-from-env",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "proxy-from-env",
      "type": "complete-todos",
      "description": "Complete 1 TODOs",
      "impact": "medium",
      "timeEstimate": "10 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "urgent"
    },
    {
      "project": "get-uri",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "get-uri",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "get-uri",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "get-uri",
      "type": "complete-todos",
      "description": "Complete 1 TODOs",
      "impact": "medium",
      "timeEstimate": "10 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "urgent"
    },
    {
      "project": "tslib",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "tslib",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "argparse",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "argparse",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "socks-proxy-agent",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "socks-proxy-agent",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "is-fullwidth-code-point",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "is-fullwidth-code-point",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "env-paths",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "env-paths",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "env-paths",
      "type": "complete-todos",
      "description": "Complete 2 TODOs",
      "impact": "medium",
      "timeEstimate": "20 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "high"
    },
    {
      "project": "yargs-parser",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "yargs-parser",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "yargs-parser",
      "type": "complete-todos",
      "description": "Complete 6 TODOs",
      "impact": "medium",
      "timeEstimate": "60 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "medium"
    },
    {
      "project": "color-name",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "color-name",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "js-yaml",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "js-yaml",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "js-yaml",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "js-yaml",
      "type": "complete-todos",
      "description": "Complete 4 TODOs",
      "impact": "medium",
      "timeEstimate": "40 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "medium"
    },
    {
      "project": "smart-buffer",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "smart-buffer",
      "type": "refactor-complex",
      "description": "Refactor 2 complex files",
      "impact": "medium",
      "timeEstimate": "1 hour",
      "implementation": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")",
      "priority": "urgent"
    },
    {
      "project": "smart-buffer",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "parent-module",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "parent-module",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "devtools-protocol",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "devtools-protocol",
      "type": "refactor-complex",
      "description": "Refactor 5 complex files",
      "impact": "medium",
      "timeEstimate": "1 hour",
      "implementation": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")",
      "priority": "urgent"
    },
    {
      "project": "devtools-protocol",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "devtools-protocol",
      "type": "complete-todos",
      "description": "Complete 17 TODOs",
      "impact": "medium",
      "timeEstimate": "170 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "medium"
    },
    {
      "project": "tar-stream",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "tar-stream",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "tar-stream",
      "type": "complete-todos",
      "description": "Complete 1 TODOs",
      "impact": "medium",
      "timeEstimate": "10 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "urgent"
    },
    {
      "project": "bare-fs",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "bare-fs",
      "type": "refactor-complex",
      "description": "Refactor 2 complex files",
      "impact": "medium",
      "timeEstimate": "1 hour",
      "implementation": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")",
      "priority": "urgent"
    },
    {
      "project": "bare-fs",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "netmask",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "netmask",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "undici-types",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "undici-types",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "undici-types",
      "type": "refactor-complex",
      "description": "Refactor 1 complex files",
      "impact": "medium",
      "timeEstimate": "1 hour",
      "implementation": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")",
      "priority": "urgent"
    },
    {
      "project": "undici-types",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "undici-types",
      "type": "complete-todos",
      "description": "Complete 17 TODOs",
      "impact": "medium",
      "timeEstimate": "170 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "medium"
    },
    {
      "project": "end-of-stream",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "end-of-stream",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "bare-os",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "bare-os",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "esutils",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "esutils",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "bare-stream",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "bare-stream",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "ansi-regex",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "ansi-regex",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "esprima",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "esprima",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "basic-ftp",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "basic-ftp",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "basic-ftp",
      "type": "refactor-complex",
      "description": "Refactor 1 complex files",
      "impact": "medium",
      "timeEstimate": "1 hour",
      "implementation": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")",
      "priority": "urgent"
    },
    {
      "project": "basic-ftp",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "basic-ftp",
      "type": "complete-todos",
      "description": "Complete 2 TODOs",
      "impact": "medium",
      "timeEstimate": "20 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "high"
    },
    {
      "project": "color-convert",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "color-convert",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "get-caller-file",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "get-caller-file",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "picocolors",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "picocolors",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "lines-and-columns",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "lines-and-columns",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "semver",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "semver",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "semver",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "semver",
      "type": "complete-todos",
      "description": "Complete 1 TODOs",
      "impact": "medium",
      "timeEstimate": "10 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "urgent"
    },
    {
      "project": "b4a",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "b4a",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "chromium-bidi",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "chromium-bidi",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "chromium-bidi",
      "type": "refactor-complex",
      "description": "Refactor 7 complex files",
      "impact": "medium",
      "timeEstimate": "1 hour",
      "implementation": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")",
      "priority": "urgent"
    },
    {
      "project": "chromium-bidi",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "chromium-bidi",
      "type": "complete-todos",
      "description": "Complete 154 TODOs",
      "impact": "medium",
      "timeEstimate": "1540 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "low"
    },
    {
      "project": "estraverse",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "estraverse",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "ansi-styles",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "ansi-styles",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "js-tokens",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "js-tokens",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "fast-fifo",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "fast-fifo",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "pump",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "pump",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "get-stream",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "get-stream",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "get-stream",
      "type": "complete-todos",
      "description": "Complete 2 TODOs",
      "impact": "medium",
      "timeEstimate": "20 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "high"
    },
    {
      "project": "is-arrayish",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "is-arrayish",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "cliui",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "cliui",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "cliui",
      "type": "complete-todos",
      "description": "Complete 1 TODOs",
      "impact": "medium",
      "timeEstimate": "10 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "urgent"
    },
    {
      "project": "yargs",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "yargs",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "yargs",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "pac-proxy-agent",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "pac-proxy-agent",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "tar-fs",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "tar-fs",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "tar-fs",
      "type": "complete-todos",
      "description": "Complete 2 TODOs",
      "impact": "medium",
      "timeEstimate": "20 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "high"
    },
    {
      "project": "socks",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "socks",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "socks",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "import-fresh",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "import-fresh",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "source-map",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "source-map",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "source-map",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "degenerator",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "degenerator",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "puppeteer-core",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "puppeteer-core",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "puppeteer-core",
      "type": "refactor-complex",
      "description": "Refactor 31 complex files",
      "impact": "medium",
      "timeEstimate": "1 hour",
      "implementation": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")",
      "priority": "urgent"
    },
    {
      "project": "puppeteer-core",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "puppeteer-core",
      "type": "complete-todos",
      "description": "Complete 79 TODOs",
      "impact": "medium",
      "timeEstimate": "790 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "low"
    },
    {
      "project": "escodegen",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "escodegen",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "cosmiconfig",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "cosmiconfig",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "cosmiconfig",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "https-proxy-agent",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "https-proxy-agent",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "string-width",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "string-width",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "string-width",
      "type": "complete-todos",
      "description": "Complete 2 TODOs",
      "impact": "medium",
      "timeEstimate": "20 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "high"
    },
    {
      "project": "streamx",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "streamx",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "streamx",
      "type": "complete-todos",
      "description": "Complete 1 TODOs",
      "impact": "medium",
      "timeEstimate": "10 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "urgent"
    },
    {
      "project": "yauzl",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "yauzl",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "yauzl",
      "type": "complete-todos",
      "description": "Complete 1 TODOs",
      "impact": "medium",
      "timeEstimate": "10 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "urgent"
    },
    {
      "project": "wrappy",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "wrappy",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "http-proxy-agent",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "http-proxy-agent",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "resolve-from",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "resolve-from",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "data-uri-to-buffer",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "data-uri-to-buffer",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "emoji-regex",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "emoji-regex",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "ws",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "ws",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "ws",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "pac-resolver",
      "type": "parallel-execution",
      "description": "Use batch file operations for faster processing",
      "impact": "high",
      "timeEstimate": "5 minutes",
      "implementation": "Use MultiEdit and batch Read operations in single message",
      "priority": "urgent"
    },
    {
      "project": "pac-resolver",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "pac-resolver",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "pac-resolver",
      "type": "complete-todos",
      "description": "Complete 1 TODOs",
      "impact": "medium",
      "timeEstimate": "10 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "urgent"
    },
    {
      "project": "bare-events",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "bare-events",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "debug",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "debug",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    },
    {
      "project": "debug",
      "type": "complete-todos",
      "description": "Complete 1 TODOs",
      "impact": "medium",
      "timeEstimate": "10 minutes",
      "implementation": "Use Grep(\"TODO|FIXME\") then Task(\"coder\", \"Complete all TODOs\")",
      "priority": "urgent"
    },
    {
      "project": "mitt",
      "type": "add-tests",
      "description": "Add test coverage with TDD agents",
      "impact": "high",
      "timeEstimate": "30 minutes",
      "implementation": "Use Task(\"tester\", \"Generate comprehensive test suite\")",
      "priority": "high"
    },
    {
      "project": "mitt",
      "type": "commit-changes",
      "description": "Commit pending changes",
      "impact": "low",
      "timeEstimate": "2 minutes",
      "implementation": "Use git commit workflow with proper message format",
      "priority": "urgent"
    }
  ],
  "quickWins": [
    {
      "project": "pachacuti",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "pachacuti",
      "task": "Refactor 508 complex files",
      "time": "1 hour",
      "command": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
    },
    {
      "project": "pachacuti-session-recorder",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "pachacuti-session-recorder",
      "task": "Refactor 128 complex files",
      "time": "1 hour",
      "command": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
    },
    {
      "project": "pachacuti-shell-viewer-frontend",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "pachacuti-shell-viewer-frontend",
      "task": "Refactor 147 complex files",
      "time": "1 hour",
      "command": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
    },
    {
      "project": "pachacuti-shell-viewer-backend",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "pachacuti-shell-viewer-backend",
      "task": "Refactor 128 complex files",
      "time": "1 hour",
      "command": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
    },
    {
      "project": "zod",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "zod",
      "task": "Refactor 24 complex files",
      "time": "1 hour",
      "command": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
    },
    {
      "project": "lru-cache",
      "task": "Refactor 1 complex files",
      "time": "1 hour",
      "command": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
    },
    {
      "project": "ip-address",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "ip-address",
      "task": "Refactor 2 complex files",
      "time": "1 hour",
      "command": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
    },
    {
      "project": "puppeteer",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "puppeteer",
      "task": "Refactor 2 complex files",
      "time": "1 hour",
      "command": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
    },
    {
      "project": "ast-types",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "ast-types",
      "task": "Refactor 3 complex files",
      "time": "1 hour",
      "command": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
    },
    {
      "project": "get-uri",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "js-yaml",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "smart-buffer",
      "task": "Refactor 2 complex files",
      "time": "1 hour",
      "command": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
    },
    {
      "project": "devtools-protocol",
      "task": "Refactor 5 complex files",
      "time": "1 hour",
      "command": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
    },
    {
      "project": "bare-fs",
      "task": "Refactor 2 complex files",
      "time": "1 hour",
      "command": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
    },
    {
      "project": "undici-types",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "undici-types",
      "task": "Refactor 1 complex files",
      "time": "1 hour",
      "command": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
    },
    {
      "project": "basic-ftp",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "basic-ftp",
      "task": "Refactor 1 complex files",
      "time": "1 hour",
      "command": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
    },
    {
      "project": "semver",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "chromium-bidi",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "chromium-bidi",
      "task": "Refactor 7 complex files",
      "time": "1 hour",
      "command": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
    },
    {
      "project": "yargs",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "socks",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "source-map",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "puppeteer-core",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "puppeteer-core",
      "task": "Refactor 31 complex files",
      "time": "1 hour",
      "command": "Use Task(\"code-analyzer\", \"Refactor large files\") with Task(\"coder\", \"Implement refactoring\")"
    },
    {
      "project": "cosmiconfig",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "ws",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    },
    {
      "project": "pac-resolver",
      "task": "Use batch file operations for faster processing",
      "time": "5 minutes",
      "command": "Use MultiEdit and batch Read operations in single message"
    }
  ],
  "timeEstimates": {}
}