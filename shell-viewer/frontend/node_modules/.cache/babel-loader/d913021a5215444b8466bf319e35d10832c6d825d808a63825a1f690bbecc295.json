{"ast":null,"code":"/**\n * Session Service\n * Handles session-related API calls\n */\n\nconst API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:3001';\nclass SessionService {\n  async getAllSessions() {\n    try {\n      const response = await fetch(`${API_BASE}/api/sessions`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch sessions: ${response.statusText}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n      throw error;\n    }\n  }\n  async getSession(sessionId) {\n    try {\n      const response = await fetch(`${API_BASE}/api/sessions/${sessionId}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch session: ${response.statusText}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching session:', error);\n      throw error;\n    }\n  }\n  async getSessionCommands(sessionId) {\n    try {\n      const response = await fetch(`${API_BASE}/api/sessions/${sessionId}/commands`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch commands: ${response.statusText}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching commands:', error);\n      throw error;\n    }\n  }\n  async getSessionTimeline(sessionId) {\n    try {\n      const response = await fetch(`${API_BASE}/api/sessions/${sessionId}/timeline`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch timeline: ${response.statusText}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching timeline:', error);\n      throw error;\n    }\n  }\n  async getStatistics() {\n    try {\n      const response = await fetch(`${API_BASE}/api/stats`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch statistics: ${response.statusText}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching statistics:', error);\n      throw error;\n    }\n  }\n  async exportSession(sessionId, format = 'json') {\n    try {\n      const response = await fetch(`${API_BASE}/api/sessions/${sessionId}/export?format=${format}`);\n      if (!response.ok) {\n        throw new Error(`Failed to export session: ${response.statusText}`);\n      }\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n      a.download = `session-${sessionId}.${format}`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n      return true;\n    } catch (error) {\n      console.error('Error exporting session:', error);\n      throw error;\n    }\n  }\n}\nexport const sessionService = new SessionService();","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API_URL","SessionService","getAllSessions","response","fetch","ok","Error","statusText","json","error","console","getSession","sessionId","getSessionCommands","getSessionTimeline","getStatistics","exportSession","format","blob","url","window","URL","createObjectURL","a","document","createElement","style","display","href","download","body","appendChild","click","revokeObjectURL","removeChild","sessionService"],"sources":["/Users/Danallovertheplace/pachacuti/shell-viewer/frontend/src/services/sessionService.js"],"sourcesContent":["/**\n * Session Service\n * Handles session-related API calls\n */\n\nconst API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\nclass SessionService {\n  async getAllSessions() {\n    try {\n      const response = await fetch(`${API_BASE}/api/sessions`);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch sessions: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n      throw error;\n    }\n  }\n\n  async getSession(sessionId) {\n    try {\n      const response = await fetch(`${API_BASE}/api/sessions/${sessionId}`);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch session: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching session:', error);\n      throw error;\n    }\n  }\n\n  async getSessionCommands(sessionId) {\n    try {\n      const response = await fetch(`${API_BASE}/api/sessions/${sessionId}/commands`);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch commands: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching commands:', error);\n      throw error;\n    }\n  }\n\n  async getSessionTimeline(sessionId) {\n    try {\n      const response = await fetch(`${API_BASE}/api/sessions/${sessionId}/timeline`);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch timeline: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching timeline:', error);\n      throw error;\n    }\n  }\n\n  async getStatistics() {\n    try {\n      const response = await fetch(`${API_BASE}/api/stats`);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch statistics: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching statistics:', error);\n      throw error;\n    }\n  }\n\n  async exportSession(sessionId, format = 'json') {\n    try {\n      const response = await fetch(`${API_BASE}/api/sessions/${sessionId}/export?format=${format}`);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to export session: ${response.statusText}`);\n      }\n\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n      a.download = `session-${sessionId}.${format}`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n\n      return true;\n    } catch (error) {\n      console.error('Error exporting session:', error);\n      throw error;\n    }\n  }\n}\n\nexport const sessionService = new SessionService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}