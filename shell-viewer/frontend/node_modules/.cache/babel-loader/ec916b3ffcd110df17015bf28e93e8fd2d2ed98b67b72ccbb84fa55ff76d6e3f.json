{"ast":null,"code":"/**\n * Socket Service\n * Handles WebSocket connections for real-time features\n */\n\nimport { io } from 'socket.io-client';\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:3001';\nclass SocketService {\n  constructor() {\n    this.socket = null;\n    this.listeners = new Map();\n  }\n  connect() {\n    var _this$socket;\n    if ((_this$socket = this.socket) !== null && _this$socket !== void 0 && _this$socket.connected) {\n      return;\n    }\n    console.log('Connecting to socket server...');\n    this.socket = io(SOCKET_URL, {\n      transports: ['websocket', 'polling'],\n      timeout: 10000\n    });\n    this.socket.on('connect', () => {\n      console.log('Socket connected:', this.socket.id);\n    });\n    this.socket.on('disconnect', reason => {\n      console.log('Socket disconnected:', reason);\n    });\n    this.socket.on('error', error => {\n      console.error('Socket error:', error);\n    });\n\n    // Set up default event handlers\n    this.setupDefaultHandlers();\n  }\n  setupDefaultHandlers() {\n    // Terminal events\n    this.socket.on('terminal-created', data => {\n      this.emit('terminal-created', data);\n    });\n    this.socket.on('terminal-output', data => {\n      this.emit('terminal-output', data);\n    });\n    this.socket.on('terminal-exit', data => {\n      this.emit('terminal-exit', data);\n    });\n\n    // Session events\n    this.socket.on('sessionProcessed', data => {\n      this.emit('sessionProcessed', data);\n    });\n    this.socket.on('terminal-activity', data => {\n      this.emit('terminal-activity', data);\n    });\n\n    // Search events\n    this.socket.on('search-results', data => {\n      this.emit('search-results', data);\n    });\n    this.socket.on('search-error', data => {\n      this.emit('search-error', data);\n    });\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      this.listeners.clear();\n    }\n  }\n\n  // Event listener management\n  on(event, callback) {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, []);\n    }\n    this.listeners.get(event).push(callback);\n  }\n  off(event, callback) {\n    const listeners = this.listeners.get(event);\n    if (listeners) {\n      const index = listeners.indexOf(callback);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    }\n  }\n  emit(event, data) {\n    const listeners = this.listeners.get(event);\n    if (listeners) {\n      listeners.forEach(callback => {\n        try {\n          callback(data);\n        } catch (error) {\n          console.error(`Error in ${event} listener:`, error);\n        }\n      });\n    }\n  }\n\n  // Terminal methods\n  startTerminal(options = {}) {\n    var _this$socket2;\n    if ((_this$socket2 = this.socket) !== null && _this$socket2 !== void 0 && _this$socket2.connected) {\n      this.socket.emit('start-terminal', options);\n    }\n  }\n  sendTerminalInput(terminalId, input) {\n    var _this$socket3;\n    if ((_this$socket3 = this.socket) !== null && _this$socket3 !== void 0 && _this$socket3.connected) {\n      this.socket.emit('terminal-input', {\n        terminalId,\n        input\n      });\n    }\n  }\n  resizeTerminal(terminalId, cols, rows) {\n    var _this$socket4;\n    if ((_this$socket4 = this.socket) !== null && _this$socket4 !== void 0 && _this$socket4.connected) {\n      this.socket.emit('terminal-resize', {\n        terminalId,\n        cols,\n        rows\n      });\n    }\n  }\n  closeTerminal(terminalId) {\n    var _this$socket5;\n    if ((_this$socket5 = this.socket) !== null && _this$socket5 !== void 0 && _this$socket5.connected) {\n      this.socket.emit('terminal-close', {\n        terminalId\n      });\n    }\n  }\n\n  // Session monitoring\n  monitorSession(sessionId) {\n    var _this$socket6;\n    if ((_this$socket6 = this.socket) !== null && _this$socket6 !== void 0 && _this$socket6.connected) {\n      this.socket.emit('monitor-session', sessionId);\n    }\n  }\n\n  // Live search\n  liveSearch(query, filters = {}) {\n    var _this$socket7;\n    if ((_this$socket7 = this.socket) !== null && _this$socket7 !== void 0 && _this$socket7.connected) {\n      this.socket.emit('live-search', {\n        query,\n        filters\n      });\n    }\n  }\n\n  // Connection status\n  isConnected() {\n    var _this$socket8;\n    return ((_this$socket8 = this.socket) === null || _this$socket8 === void 0 ? void 0 : _this$socket8.connected) || false;\n  }\n  getId() {\n    var _this$socket9;\n    return (_this$socket9 = this.socket) === null || _this$socket9 === void 0 ? void 0 : _this$socket9.id;\n  }\n}\nexport const socketService = new SocketService();","map":{"version":3,"names":["io","SOCKET_URL","process","env","REACT_APP_SOCKET_URL","SocketService","constructor","socket","listeners","Map","connect","_this$socket","connected","console","log","transports","timeout","on","id","reason","error","setupDefaultHandlers","data","emit","disconnect","clear","event","callback","has","set","get","push","off","index","indexOf","splice","forEach","startTerminal","options","_this$socket2","sendTerminalInput","terminalId","input","_this$socket3","resizeTerminal","cols","rows","_this$socket4","closeTerminal","_this$socket5","monitorSession","sessionId","_this$socket6","liveSearch","query","filters","_this$socket7","isConnected","_this$socket8","getId","_this$socket9","socketService"],"sources":["/Users/Danallovertheplace/pachacuti/shell-viewer/frontend/src/services/socketService.js"],"sourcesContent":["/**\n * Socket Service\n * Handles WebSocket connections for real-time features\n */\n\nimport { io } from 'socket.io-client';\n\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:3001';\n\nclass SocketService {\n  constructor() {\n    this.socket = null;\n    this.listeners = new Map();\n  }\n\n  connect() {\n    if (this.socket?.connected) {\n      return;\n    }\n\n    console.log('Connecting to socket server...');\n    \n    this.socket = io(SOCKET_URL, {\n      transports: ['websocket', 'polling'],\n      timeout: 10000,\n    });\n\n    this.socket.on('connect', () => {\n      console.log('Socket connected:', this.socket.id);\n    });\n\n    this.socket.on('disconnect', (reason) => {\n      console.log('Socket disconnected:', reason);\n    });\n\n    this.socket.on('error', (error) => {\n      console.error('Socket error:', error);\n    });\n\n    // Set up default event handlers\n    this.setupDefaultHandlers();\n  }\n\n  setupDefaultHandlers() {\n    // Terminal events\n    this.socket.on('terminal-created', (data) => {\n      this.emit('terminal-created', data);\n    });\n\n    this.socket.on('terminal-output', (data) => {\n      this.emit('terminal-output', data);\n    });\n\n    this.socket.on('terminal-exit', (data) => {\n      this.emit('terminal-exit', data);\n    });\n\n    // Session events\n    this.socket.on('sessionProcessed', (data) => {\n      this.emit('sessionProcessed', data);\n    });\n\n    this.socket.on('terminal-activity', (data) => {\n      this.emit('terminal-activity', data);\n    });\n\n    // Search events\n    this.socket.on('search-results', (data) => {\n      this.emit('search-results', data);\n    });\n\n    this.socket.on('search-error', (data) => {\n      this.emit('search-error', data);\n    });\n  }\n\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      this.listeners.clear();\n    }\n  }\n\n  // Event listener management\n  on(event, callback) {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, []);\n    }\n    this.listeners.get(event).push(callback);\n  }\n\n  off(event, callback) {\n    const listeners = this.listeners.get(event);\n    if (listeners) {\n      const index = listeners.indexOf(callback);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    }\n  }\n\n  emit(event, data) {\n    const listeners = this.listeners.get(event);\n    if (listeners) {\n      listeners.forEach(callback => {\n        try {\n          callback(data);\n        } catch (error) {\n          console.error(`Error in ${event} listener:`, error);\n        }\n      });\n    }\n  }\n\n  // Terminal methods\n  startTerminal(options = {}) {\n    if (this.socket?.connected) {\n      this.socket.emit('start-terminal', options);\n    }\n  }\n\n  sendTerminalInput(terminalId, input) {\n    if (this.socket?.connected) {\n      this.socket.emit('terminal-input', { terminalId, input });\n    }\n  }\n\n  resizeTerminal(terminalId, cols, rows) {\n    if (this.socket?.connected) {\n      this.socket.emit('terminal-resize', { terminalId, cols, rows });\n    }\n  }\n\n  closeTerminal(terminalId) {\n    if (this.socket?.connected) {\n      this.socket.emit('terminal-close', { terminalId });\n    }\n  }\n\n  // Session monitoring\n  monitorSession(sessionId) {\n    if (this.socket?.connected) {\n      this.socket.emit('monitor-session', sessionId);\n    }\n  }\n\n  // Live search\n  liveSearch(query, filters = {}) {\n    if (this.socket?.connected) {\n      this.socket.emit('live-search', { query, filters });\n    }\n  }\n\n  // Connection status\n  isConnected() {\n    return this.socket?.connected || false;\n  }\n\n  getId() {\n    return this.socket?.id;\n  }\n}\n\nexport const socketService = new SocketService();"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SAASA,EAAE,QAAQ,kBAAkB;AAErC,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,IAAI,uBAAuB;AAE9E,MAAMC,aAAa,CAAC;EAClBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC5B;EAEAC,OAAOA,CAAA,EAAG;IAAA,IAAAC,YAAA;IACR,KAAAA,YAAA,GAAI,IAAI,CAACJ,MAAM,cAAAI,YAAA,eAAXA,YAAA,CAAaC,SAAS,EAAE;MAC1B;IACF;IAEAC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAE7C,IAAI,CAACP,MAAM,GAAGP,EAAE,CAACC,UAAU,EAAE;MAC3Bc,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC;MACpCC,OAAO,EAAE;IACX,CAAC,CAAC;IAEF,IAAI,CAACT,MAAM,CAACU,EAAE,CAAC,SAAS,EAAE,MAAM;MAC9BJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAACP,MAAM,CAACW,EAAE,CAAC;IAClD,CAAC,CAAC;IAEF,IAAI,CAACX,MAAM,CAACU,EAAE,CAAC,YAAY,EAAGE,MAAM,IAAK;MACvCN,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEK,MAAM,CAAC;IAC7C,CAAC,CAAC;IAEF,IAAI,CAACZ,MAAM,CAACU,EAAE,CAAC,OAAO,EAAGG,KAAK,IAAK;MACjCP,OAAO,CAACO,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC,CAAC,CAAC;;IAEF;IACA,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC7B;EAEAA,oBAAoBA,CAAA,EAAG;IACrB;IACA,IAAI,CAACd,MAAM,CAACU,EAAE,CAAC,kBAAkB,EAAGK,IAAI,IAAK;MAC3C,IAAI,CAACC,IAAI,CAAC,kBAAkB,EAAED,IAAI,CAAC;IACrC,CAAC,CAAC;IAEF,IAAI,CAACf,MAAM,CAACU,EAAE,CAAC,iBAAiB,EAAGK,IAAI,IAAK;MAC1C,IAAI,CAACC,IAAI,CAAC,iBAAiB,EAAED,IAAI,CAAC;IACpC,CAAC,CAAC;IAEF,IAAI,CAACf,MAAM,CAACU,EAAE,CAAC,eAAe,EAAGK,IAAI,IAAK;MACxC,IAAI,CAACC,IAAI,CAAC,eAAe,EAAED,IAAI,CAAC;IAClC,CAAC,CAAC;;IAEF;IACA,IAAI,CAACf,MAAM,CAACU,EAAE,CAAC,kBAAkB,EAAGK,IAAI,IAAK;MAC3C,IAAI,CAACC,IAAI,CAAC,kBAAkB,EAAED,IAAI,CAAC;IACrC,CAAC,CAAC;IAEF,IAAI,CAACf,MAAM,CAACU,EAAE,CAAC,mBAAmB,EAAGK,IAAI,IAAK;MAC5C,IAAI,CAACC,IAAI,CAAC,mBAAmB,EAAED,IAAI,CAAC;IACtC,CAAC,CAAC;;IAEF;IACA,IAAI,CAACf,MAAM,CAACU,EAAE,CAAC,gBAAgB,EAAGK,IAAI,IAAK;MACzC,IAAI,CAACC,IAAI,CAAC,gBAAgB,EAAED,IAAI,CAAC;IACnC,CAAC,CAAC;IAEF,IAAI,CAACf,MAAM,CAACU,EAAE,CAAC,cAAc,EAAGK,IAAI,IAAK;MACvC,IAAI,CAACC,IAAI,CAAC,cAAc,EAAED,IAAI,CAAC;IACjC,CAAC,CAAC;EACJ;EAEAE,UAAUA,CAAA,EAAG;IACX,IAAI,IAAI,CAACjB,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACiB,UAAU,CAAC,CAAC;MACxB,IAAI,CAACjB,MAAM,GAAG,IAAI;MAClB,IAAI,CAACC,SAAS,CAACiB,KAAK,CAAC,CAAC;IACxB;EACF;;EAEA;EACAR,EAAEA,CAACS,KAAK,EAAEC,QAAQ,EAAE;IAClB,IAAI,CAAC,IAAI,CAACnB,SAAS,CAACoB,GAAG,CAACF,KAAK,CAAC,EAAE;MAC9B,IAAI,CAAClB,SAAS,CAACqB,GAAG,CAACH,KAAK,EAAE,EAAE,CAAC;IAC/B;IACA,IAAI,CAAClB,SAAS,CAACsB,GAAG,CAACJ,KAAK,CAAC,CAACK,IAAI,CAACJ,QAAQ,CAAC;EAC1C;EAEAK,GAAGA,CAACN,KAAK,EAAEC,QAAQ,EAAE;IACnB,MAAMnB,SAAS,GAAG,IAAI,CAACA,SAAS,CAACsB,GAAG,CAACJ,KAAK,CAAC;IAC3C,IAAIlB,SAAS,EAAE;MACb,MAAMyB,KAAK,GAAGzB,SAAS,CAAC0B,OAAO,CAACP,QAAQ,CAAC;MACzC,IAAIM,KAAK,GAAG,CAAC,CAAC,EAAE;QACdzB,SAAS,CAAC2B,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAC5B;IACF;EACF;EAEAV,IAAIA,CAACG,KAAK,EAAEJ,IAAI,EAAE;IAChB,MAAMd,SAAS,GAAG,IAAI,CAACA,SAAS,CAACsB,GAAG,CAACJ,KAAK,CAAC;IAC3C,IAAIlB,SAAS,EAAE;MACbA,SAAS,CAAC4B,OAAO,CAACT,QAAQ,IAAI;QAC5B,IAAI;UACFA,QAAQ,CAACL,IAAI,CAAC;QAChB,CAAC,CAAC,OAAOF,KAAK,EAAE;UACdP,OAAO,CAACO,KAAK,CAAC,YAAYM,KAAK,YAAY,EAAEN,KAAK,CAAC;QACrD;MACF,CAAC,CAAC;IACJ;EACF;;EAEA;EACAiB,aAAaA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA,IAAAC,aAAA;IAC1B,KAAAA,aAAA,GAAI,IAAI,CAAChC,MAAM,cAAAgC,aAAA,eAAXA,aAAA,CAAa3B,SAAS,EAAE;MAC1B,IAAI,CAACL,MAAM,CAACgB,IAAI,CAAC,gBAAgB,EAAEe,OAAO,CAAC;IAC7C;EACF;EAEAE,iBAAiBA,CAACC,UAAU,EAAEC,KAAK,EAAE;IAAA,IAAAC,aAAA;IACnC,KAAAA,aAAA,GAAI,IAAI,CAACpC,MAAM,cAAAoC,aAAA,eAAXA,aAAA,CAAa/B,SAAS,EAAE;MAC1B,IAAI,CAACL,MAAM,CAACgB,IAAI,CAAC,gBAAgB,EAAE;QAAEkB,UAAU;QAAEC;MAAM,CAAC,CAAC;IAC3D;EACF;EAEAE,cAAcA,CAACH,UAAU,EAAEI,IAAI,EAAEC,IAAI,EAAE;IAAA,IAAAC,aAAA;IACrC,KAAAA,aAAA,GAAI,IAAI,CAACxC,MAAM,cAAAwC,aAAA,eAAXA,aAAA,CAAanC,SAAS,EAAE;MAC1B,IAAI,CAACL,MAAM,CAACgB,IAAI,CAAC,iBAAiB,EAAE;QAAEkB,UAAU;QAAEI,IAAI;QAAEC;MAAK,CAAC,CAAC;IACjE;EACF;EAEAE,aAAaA,CAACP,UAAU,EAAE;IAAA,IAAAQ,aAAA;IACxB,KAAAA,aAAA,GAAI,IAAI,CAAC1C,MAAM,cAAA0C,aAAA,eAAXA,aAAA,CAAarC,SAAS,EAAE;MAC1B,IAAI,CAACL,MAAM,CAACgB,IAAI,CAAC,gBAAgB,EAAE;QAAEkB;MAAW,CAAC,CAAC;IACpD;EACF;;EAEA;EACAS,cAAcA,CAACC,SAAS,EAAE;IAAA,IAAAC,aAAA;IACxB,KAAAA,aAAA,GAAI,IAAI,CAAC7C,MAAM,cAAA6C,aAAA,eAAXA,aAAA,CAAaxC,SAAS,EAAE;MAC1B,IAAI,CAACL,MAAM,CAACgB,IAAI,CAAC,iBAAiB,EAAE4B,SAAS,CAAC;IAChD;EACF;;EAEA;EACAE,UAAUA,CAACC,KAAK,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA,IAAAC,aAAA;IAC9B,KAAAA,aAAA,GAAI,IAAI,CAACjD,MAAM,cAAAiD,aAAA,eAAXA,aAAA,CAAa5C,SAAS,EAAE;MAC1B,IAAI,CAACL,MAAM,CAACgB,IAAI,CAAC,aAAa,EAAE;QAAE+B,KAAK;QAAEC;MAAQ,CAAC,CAAC;IACrD;EACF;;EAEA;EACAE,WAAWA,CAAA,EAAG;IAAA,IAAAC,aAAA;IACZ,OAAO,EAAAA,aAAA,OAAI,CAACnD,MAAM,cAAAmD,aAAA,uBAAXA,aAAA,CAAa9C,SAAS,KAAI,KAAK;EACxC;EAEA+C,KAAKA,CAAA,EAAG;IAAA,IAAAC,aAAA;IACN,QAAAA,aAAA,GAAO,IAAI,CAACrD,MAAM,cAAAqD,aAAA,uBAAXA,aAAA,CAAa1C,EAAE;EACxB;AACF;AAEA,OAAO,MAAM2C,aAAa,GAAG,IAAIxD,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}